/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 148.0, "minX": 0.0, "maxY": 2079.0, "series": [{"data": [[0.0, 2002.0], [0.1, 2002.0], [0.2, 2004.0], [0.3, 2004.0], [0.4, 2004.0], [0.5, 2004.0], [0.6, 2004.0], [0.7, 2004.0], [0.8, 2004.0], [0.9, 2004.0], [1.0, 2006.0], [1.1, 2006.0], [1.2, 2006.0], [1.3, 2006.0], [1.4, 2006.0], [1.5, 2006.0], [1.6, 2006.0], [1.7, 2006.0], [1.8, 2006.0], [1.9, 2006.0], [2.0, 2006.0], [2.1, 2006.0], [2.2, 2007.0], [2.3, 2007.0], [2.4, 2007.0], [2.5, 2007.0], [2.6, 2007.0], [2.7, 2007.0], [2.8, 2007.0], [2.9, 2007.0], [3.0, 2007.0], [3.1, 2007.0], [3.2, 2008.0], [3.3, 2008.0], [3.4, 2008.0], [3.5, 2008.0], [3.6, 2008.0], [3.7, 2008.0], [3.8, 2008.0], [3.9, 2008.0], [4.0, 2008.0], [4.1, 2008.0], [4.2, 2008.0], [4.3, 2008.0], [4.4, 2009.0], [4.5, 2009.0], [4.6, 2009.0], [4.7, 2009.0], [4.8, 2009.0], [4.9, 2009.0], [5.0, 2009.0], [5.1, 2009.0], [5.2, 2009.0], [5.3, 2009.0], [5.4, 2009.0], [5.5, 2009.0], [5.6, 2009.0], [5.7, 2009.0], [5.8, 2009.0], [5.9, 2009.0], [6.0, 2009.0], [6.1, 2009.0], [6.2, 2009.0], [6.3, 2009.0], [6.4, 2009.0], [6.5, 2009.0], [6.6, 2009.0], [6.7, 2010.0], [6.8, 2010.0], [6.9, 2010.0], [7.0, 2010.0], [7.1, 2010.0], [7.2, 2010.0], [7.3, 2010.0], [7.4, 2010.0], [7.5, 2010.0], [7.6, 2010.0], [7.7, 2010.0], [7.8, 2010.0], [7.9, 2010.0], [8.0, 2010.0], [8.1, 2010.0], [8.2, 2010.0], [8.3, 2010.0], [8.4, 2010.0], [8.5, 2010.0], [8.6, 2010.0], [8.7, 2010.0], [8.8, 2010.0], [8.9, 2010.0], [9.0, 2010.0], [9.1, 2010.0], [9.2, 2010.0], [9.3, 2010.0], [9.4, 2010.0], [9.5, 2010.0], [9.6, 2010.0], [9.7, 2011.0], [9.8, 2011.0], [9.9, 2011.0], [10.0, 2011.0], [10.1, 2011.0], [10.2, 2011.0], [10.3, 2011.0], [10.4, 2011.0], [10.5, 2011.0], [10.6, 2011.0], [10.7, 2011.0], [10.8, 2011.0], [10.9, 2011.0], [11.0, 2011.0], [11.1, 2011.0], [11.2, 2011.0], [11.3, 2011.0], [11.4, 2011.0], [11.5, 2011.0], [11.6, 2011.0], [11.7, 2011.0], [11.8, 2011.0], [11.9, 2011.0], [12.0, 2011.0], [12.1, 2011.0], [12.2, 2011.0], [12.3, 2012.0], [12.4, 2012.0], [12.5, 2012.0], [12.6, 2012.0], [12.7, 2012.0], [12.8, 2012.0], [12.9, 2012.0], [13.0, 2012.0], [13.1, 2012.0], [13.2, 2012.0], [13.3, 2012.0], [13.4, 2012.0], [13.5, 2012.0], [13.6, 2012.0], [13.7, 2012.0], [13.8, 2012.0], [13.9, 2012.0], [14.0, 2012.0], [14.1, 2013.0], [14.2, 2013.0], [14.3, 2013.0], [14.4, 2013.0], [14.5, 2013.0], [14.6, 2013.0], [14.7, 2013.0], [14.8, 2013.0], [14.9, 2013.0], [15.0, 2013.0], [15.1, 2013.0], [15.2, 2013.0], [15.3, 2013.0], [15.4, 2013.0], [15.5, 2013.0], [15.6, 2013.0], [15.7, 2013.0], [15.8, 2013.0], [15.9, 2014.0], [16.0, 2014.0], [16.1, 2014.0], [16.2, 2014.0], [16.3, 2014.0], [16.4, 2014.0], [16.5, 2014.0], [16.6, 2014.0], [16.7, 2014.0], [16.8, 2014.0], [16.9, 2014.0], [17.0, 2014.0], [17.1, 2014.0], [17.2, 2014.0], [17.3, 2014.0], [17.4, 2014.0], [17.5, 2014.0], [17.6, 2014.0], [17.7, 2014.0], [17.8, 2014.0], [17.9, 2014.0], [18.0, 2014.0], [18.1, 2014.0], [18.2, 2014.0], [18.3, 2015.0], [18.4, 2015.0], [18.5, 2015.0], [18.6, 2015.0], [18.7, 2015.0], [18.8, 2015.0], [18.9, 2015.0], [19.0, 2015.0], [19.1, 2015.0], [19.2, 2015.0], [19.3, 2015.0], [19.4, 2015.0], [19.5, 2015.0], [19.6, 2015.0], [19.7, 2015.0], [19.8, 2015.0], [19.9, 2015.0], [20.0, 2015.0], [20.1, 2015.0], [20.2, 2015.0], [20.3, 2015.0], [20.4, 2015.0], [20.5, 2015.0], [20.6, 2015.0], [20.7, 2015.0], [20.8, 2015.0], [20.9, 2015.0], [21.0, 2015.0], [21.1, 2016.0], [21.2, 2016.0], [21.3, 2016.0], [21.4, 2016.0], [21.5, 2016.0], [21.6, 2016.0], [21.7, 2016.0], [21.8, 2016.0], [21.9, 2016.0], [22.0, 2016.0], [22.1, 2016.0], [22.2, 2016.0], [22.3, 2016.0], [22.4, 2016.0], [22.5, 2017.0], [22.6, 2017.0], [22.7, 2017.0], [22.8, 2017.0], [22.9, 2017.0], [23.0, 2017.0], [23.1, 2017.0], [23.2, 2017.0], [23.3, 2017.0], [23.4, 2017.0], [23.5, 2017.0], [23.6, 2017.0], [23.7, 2017.0], [23.8, 2017.0], [23.9, 2017.0], [24.0, 2017.0], [24.1, 2017.0], [24.2, 2017.0], [24.3, 2017.0], [24.4, 2017.0], [24.5, 2017.0], [24.6, 2017.0], [24.7, 2017.0], [24.8, 2018.0], [24.9, 2018.0], [25.0, 2018.0], [25.1, 2018.0], [25.2, 2018.0], [25.3, 2018.0], [25.4, 2018.0], [25.5, 2018.0], [25.6, 2018.0], [25.7, 2018.0], [25.8, 2018.0], [25.9, 2018.0], [26.0, 2018.0], [26.1, 2018.0], [26.2, 2018.0], [26.3, 2018.0], [26.4, 2018.0], [26.5, 2018.0], [26.6, 2018.0], [26.7, 2018.0], [26.8, 2018.0], [26.9, 2018.0], [27.0, 2018.0], [27.1, 2018.0], [27.2, 2018.0], [27.3, 2018.0], [27.4, 2018.0], [27.5, 2018.0], [27.6, 2018.0], [27.7, 2018.0], [27.8, 2019.0], [27.9, 2019.0], [28.0, 2019.0], [28.1, 2019.0], [28.2, 2019.0], [28.3, 2019.0], [28.4, 2019.0], [28.5, 2019.0], [28.6, 2019.0], [28.7, 2019.0], [28.8, 2019.0], [28.9, 2019.0], [29.0, 2019.0], [29.1, 2019.0], [29.2, 2019.0], [29.3, 2019.0], [29.4, 2019.0], [29.5, 2019.0], [29.6, 2019.0], [29.7, 2019.0], [29.8, 2019.0], [29.9, 2019.0], [30.0, 2019.0], [30.1, 2019.0], [30.2, 2019.0], [30.3, 2019.0], [30.4, 2019.0], [30.5, 2019.0], [30.6, 2019.0], [30.7, 2019.0], [30.8, 2019.0], [30.9, 2019.0], [31.0, 2019.0], [31.1, 2019.0], [31.2, 2019.0], [31.3, 2019.0], [31.4, 2019.0], [31.5, 2019.0], [31.6, 2019.0], [31.7, 2019.0], [31.8, 2019.0], [31.9, 2019.0], [32.0, 2020.0], [32.1, 2020.0], [32.2, 2020.0], [32.3, 2020.0], [32.4, 2020.0], [32.5, 2020.0], [32.6, 2020.0], [32.7, 2020.0], [32.8, 2020.0], [32.9, 2020.0], [33.0, 2020.0], [33.1, 2020.0], [33.2, 2020.0], [33.3, 2020.0], [33.4, 2020.0], [33.5, 2020.0], [33.6, 2020.0], [33.7, 2020.0], [33.8, 2020.0], [33.9, 2020.0], [34.0, 2020.0], [34.1, 2020.0], [34.2, 2020.0], [34.3, 2020.0], [34.4, 2020.0], [34.5, 2020.0], [34.6, 2020.0], [34.7, 2020.0], [34.8, 2020.0], [34.9, 2020.0], [35.0, 2020.0], [35.1, 2020.0], [35.2, 2020.0], [35.3, 2020.0], [35.4, 2021.0], [35.5, 2021.0], [35.6, 2021.0], [35.7, 2021.0], [35.8, 2021.0], [35.9, 2021.0], [36.0, 2021.0], [36.1, 2021.0], [36.2, 2021.0], [36.3, 2021.0], [36.4, 2021.0], [36.5, 2021.0], [36.6, 2021.0], [36.7, 2021.0], [36.8, 2021.0], [36.9, 2021.0], [37.0, 2021.0], [37.1, 2021.0], [37.2, 2021.0], [37.3, 2021.0], [37.4, 2021.0], [37.5, 2021.0], [37.6, 2021.0], [37.7, 2021.0], [37.8, 2021.0], [37.9, 2021.0], [38.0, 2021.0], [38.1, 2021.0], [38.2, 2021.0], [38.3, 2021.0], [38.4, 2021.0], [38.5, 2021.0], [38.6, 2021.0], [38.7, 2021.0], [38.8, 2021.0], [38.9, 2021.0], [39.0, 2021.0], [39.1, 2021.0], [39.2, 2021.0], [39.3, 2021.0], [39.4, 2021.0], [39.5, 2021.0], [39.6, 2022.0], [39.7, 2022.0], [39.8, 2022.0], [39.9, 2022.0], [40.0, 2022.0], [40.1, 2022.0], [40.2, 2022.0], [40.3, 2022.0], [40.4, 2022.0], [40.5, 2022.0], [40.6, 2022.0], [40.7, 2022.0], [40.8, 2022.0], [40.9, 2022.0], [41.0, 2022.0], [41.1, 2022.0], [41.2, 2022.0], [41.3, 2022.0], [41.4, 2022.0], [41.5, 2022.0], [41.6, 2022.0], [41.7, 2022.0], [41.8, 2022.0], [41.9, 2022.0], [42.0, 2022.0], [42.1, 2022.0], [42.2, 2022.0], [42.3, 2022.0], [42.4, 2022.0], [42.5, 2022.0], [42.6, 2022.0], [42.7, 2022.0], [42.8, 2022.0], [42.9, 2023.0], [43.0, 2023.0], [43.1, 2023.0], [43.2, 2023.0], [43.3, 2023.0], [43.4, 2023.0], [43.5, 2023.0], [43.6, 2023.0], [43.7, 2023.0], [43.8, 2023.0], [43.9, 2023.0], [44.0, 2023.0], [44.1, 2023.0], [44.2, 2023.0], [44.3, 2023.0], [44.4, 2023.0], [44.5, 2023.0], [44.6, 2023.0], [44.7, 2023.0], [44.8, 2023.0], [44.9, 2023.0], [45.0, 2023.0], [45.1, 2023.0], [45.2, 2023.0], [45.3, 2023.0], [45.4, 2023.0], [45.5, 2023.0], [45.6, 2023.0], [45.7, 2023.0], [45.8, 2023.0], [45.9, 2023.0], [46.0, 2023.0], [46.1, 2023.0], [46.2, 2023.0], [46.3, 2023.0], [46.4, 2023.0], [46.5, 2023.0], [46.6, 2024.0], [46.7, 2024.0], [46.8, 2024.0], [46.9, 2024.0], [47.0, 2024.0], [47.1, 2024.0], [47.2, 2024.0], [47.3, 2024.0], [47.4, 2024.0], [47.5, 2024.0], [47.6, 2024.0], [47.7, 2024.0], [47.8, 2024.0], [47.9, 2024.0], [48.0, 2024.0], [48.1, 2024.0], [48.2, 2024.0], [48.3, 2024.0], [48.4, 2024.0], [48.5, 2024.0], [48.6, 2024.0], [48.7, 2024.0], [48.8, 2024.0], [48.9, 2024.0], [49.0, 2024.0], [49.1, 2024.0], [49.2, 2024.0], [49.3, 2024.0], [49.4, 2024.0], [49.5, 2024.0], [49.6, 2024.0], [49.7, 2024.0], [49.8, 2024.0], [49.9, 2024.0], [50.0, 2024.0], [50.1, 2024.0], [50.2, 2024.0], [50.3, 2024.0], [50.4, 2025.0], [50.5, 2025.0], [50.6, 2025.0], [50.7, 2025.0], [50.8, 2025.0], [50.9, 2025.0], [51.0, 2025.0], [51.1, 2025.0], [51.2, 2025.0], [51.3, 2025.0], [51.4, 2025.0], [51.5, 2025.0], [51.6, 2025.0], [51.7, 2025.0], [51.8, 2025.0], [51.9, 2025.0], [52.0, 2025.0], [52.1, 2025.0], [52.2, 2025.0], [52.3, 2025.0], [52.4, 2025.0], [52.5, 2025.0], [52.6, 2025.0], [52.7, 2025.0], [52.8, 2025.0], [52.9, 2025.0], [53.0, 2025.0], [53.1, 2025.0], [53.2, 2025.0], [53.3, 2025.0], [53.4, 2025.0], [53.5, 2025.0], [53.6, 2025.0], [53.7, 2025.0], [53.8, 2025.0], [53.9, 2025.0], [54.0, 2026.0], [54.1, 2026.0], [54.2, 2026.0], [54.3, 2026.0], [54.4, 2026.0], [54.5, 2026.0], [54.6, 2026.0], [54.7, 2026.0], [54.8, 2026.0], [54.9, 2026.0], [55.0, 2026.0], [55.1, 2026.0], [55.2, 2026.0], [55.3, 2026.0], [55.4, 2026.0], [55.5, 2026.0], [55.6, 2026.0], [55.7, 2026.0], [55.8, 2026.0], [55.9, 2026.0], [56.0, 2026.0], [56.1, 2026.0], [56.2, 2026.0], [56.3, 2026.0], [56.4, 2026.0], [56.5, 2026.0], [56.6, 2026.0], [56.7, 2026.0], [56.8, 2027.0], [56.9, 2027.0], [57.0, 2027.0], [57.1, 2027.0], [57.2, 2027.0], [57.3, 2027.0], [57.4, 2027.0], [57.5, 2027.0], [57.6, 2027.0], [57.7, 2027.0], [57.8, 2027.0], [57.9, 2027.0], [58.0, 2027.0], [58.1, 2027.0], [58.2, 2027.0], [58.3, 2027.0], [58.4, 2027.0], [58.5, 2027.0], [58.6, 2027.0], [58.7, 2027.0], [58.8, 2027.0], [58.9, 2027.0], [59.0, 2027.0], [59.1, 2027.0], [59.2, 2027.0], [59.3, 2027.0], [59.4, 2027.0], [59.5, 2027.0], [59.6, 2027.0], [59.7, 2027.0], [59.8, 2027.0], [59.9, 2027.0], [60.0, 2028.0], [60.1, 2028.0], [60.2, 2028.0], [60.3, 2028.0], [60.4, 2028.0], [60.5, 2028.0], [60.6, 2028.0], [60.7, 2028.0], [60.8, 2028.0], [60.9, 2028.0], [61.0, 2028.0], [61.1, 2028.0], [61.2, 2028.0], [61.3, 2028.0], [61.4, 2028.0], [61.5, 2028.0], [61.6, 2028.0], [61.7, 2028.0], [61.8, 2028.0], [61.9, 2028.0], [62.0, 2028.0], [62.1, 2028.0], [62.2, 2028.0], [62.3, 2028.0], [62.4, 2028.0], [62.5, 2028.0], [62.6, 2028.0], [62.7, 2028.0], [62.8, 2028.0], [62.9, 2028.0], [63.0, 2028.0], [63.1, 2028.0], [63.2, 2029.0], [63.3, 2029.0], [63.4, 2029.0], [63.5, 2029.0], [63.6, 2029.0], [63.7, 2029.0], [63.8, 2029.0], [63.9, 2029.0], [64.0, 2029.0], [64.1, 2029.0], [64.2, 2029.0], [64.3, 2029.0], [64.4, 2029.0], [64.5, 2029.0], [64.6, 2029.0], [64.7, 2029.0], [64.8, 2029.0], [64.9, 2029.0], [65.0, 2029.0], [65.1, 2029.0], [65.2, 2030.0], [65.3, 2030.0], [65.4, 2030.0], [65.5, 2030.0], [65.6, 2030.0], [65.7, 2030.0], [65.8, 2030.0], [65.9, 2030.0], [66.0, 2030.0], [66.1, 2030.0], [66.2, 2030.0], [66.3, 2030.0], [66.4, 2030.0], [66.5, 2030.0], [66.6, 2030.0], [66.7, 2030.0], [66.8, 2030.0], [66.9, 2030.0], [67.0, 2030.0], [67.1, 2030.0], [67.2, 2030.0], [67.3, 2030.0], [67.4, 2030.0], [67.5, 2030.0], [67.6, 2030.0], [67.7, 2030.0], [67.8, 2030.0], [67.9, 2030.0], [68.0, 2031.0], [68.1, 2031.0], [68.2, 2031.0], [68.3, 2031.0], [68.4, 2031.0], [68.5, 2031.0], [68.6, 2031.0], [68.7, 2031.0], [68.8, 2031.0], [68.9, 2031.0], [69.0, 2031.0], [69.1, 2031.0], [69.2, 2031.0], [69.3, 2031.0], [69.4, 2031.0], [69.5, 2031.0], [69.6, 2031.0], [69.7, 2031.0], [69.8, 2031.0], [69.9, 2031.0], [70.0, 2031.0], [70.1, 2031.0], [70.2, 2031.0], [70.3, 2031.0], [70.4, 2031.0], [70.5, 2031.0], [70.6, 2031.0], [70.7, 2031.0], [70.8, 2031.0], [70.9, 2031.0], [71.0, 2031.0], [71.1, 2031.0], [71.2, 2031.0], [71.3, 2031.0], [71.4, 2031.0], [71.5, 2031.0], [71.6, 2032.0], [71.7, 2032.0], [71.8, 2032.0], [71.9, 2032.0], [72.0, 2032.0], [72.1, 2032.0], [72.2, 2032.0], [72.3, 2032.0], [72.4, 2032.0], [72.5, 2032.0], [72.6, 2032.0], [72.7, 2032.0], [72.8, 2032.0], [72.9, 2032.0], [73.0, 2032.0], [73.1, 2032.0], [73.2, 2032.0], [73.3, 2032.0], [73.4, 2032.0], [73.5, 2032.0], [73.6, 2032.0], [73.7, 2032.0], [73.8, 2032.0], [73.9, 2032.0], [74.0, 2032.0], [74.1, 2032.0], [74.2, 2032.0], [74.3, 2032.0], [74.4, 2032.0], [74.5, 2032.0], [74.6, 2032.0], [74.7, 2032.0], [74.8, 2032.0], [74.9, 2032.0], [75.0, 2032.0], [75.1, 2032.0], [75.2, 2033.0], [75.3, 2033.0], [75.4, 2033.0], [75.5, 2033.0], [75.6, 2033.0], [75.7, 2033.0], [75.8, 2033.0], [75.9, 2033.0], [76.0, 2033.0], [76.1, 2033.0], [76.2, 2033.0], [76.3, 2033.0], [76.4, 2033.0], [76.5, 2033.0], [76.6, 2033.0], [76.7, 2033.0], [76.8, 2033.0], [76.9, 2033.0], [77.0, 2033.0], [77.1, 2033.0], [77.2, 2033.0], [77.3, 2033.0], [77.4, 2033.0], [77.5, 2033.0], [77.6, 2033.0], [77.7, 2033.0], [77.8, 2033.0], [77.9, 2033.0], [78.0, 2033.0], [78.1, 2033.0], [78.2, 2033.0], [78.3, 2033.0], [78.4, 2033.0], [78.5, 2033.0], [78.6, 2033.0], [78.7, 2033.0], [78.8, 2034.0], [78.9, 2034.0], [79.0, 2034.0], [79.1, 2034.0], [79.2, 2034.0], [79.3, 2034.0], [79.4, 2034.0], [79.5, 2034.0], [79.6, 2034.0], [79.7, 2034.0], [79.8, 2034.0], [79.9, 2034.0], [80.0, 2034.0], [80.1, 2034.0], [80.2, 2034.0], [80.3, 2034.0], [80.4, 2035.0], [80.5, 2035.0], [80.6, 2035.0], [80.7, 2035.0], [80.8, 2035.0], [80.9, 2035.0], [81.0, 2035.0], [81.1, 2035.0], [81.2, 2035.0], [81.3, 2035.0], [81.4, 2035.0], [81.5, 2035.0], [81.6, 2035.0], [81.7, 2035.0], [81.8, 2035.0], [81.9, 2035.0], [82.0, 2035.0], [82.1, 2035.0], [82.2, 2035.0], [82.3, 2035.0], [82.4, 2036.0], [82.5, 2036.0], [82.6, 2036.0], [82.7, 2036.0], [82.8, 2036.0], [82.9, 2036.0], [83.0, 2036.0], [83.1, 2036.0], [83.2, 2036.0], [83.3, 2036.0], [83.4, 2036.0], [83.5, 2036.0], [83.6, 2036.0], [83.7, 2036.0], [83.8, 2036.0], [83.9, 2036.0], [84.0, 2036.0], [84.1, 2036.0], [84.2, 2036.0], [84.3, 2036.0], [84.4, 2036.0], [84.5, 2036.0], [84.6, 2036.0], [84.7, 2036.0], [84.8, 2036.0], [84.9, 2036.0], [85.0, 2037.0], [85.1, 2037.0], [85.2, 2037.0], [85.3, 2037.0], [85.4, 2037.0], [85.5, 2037.0], [85.6, 2037.0], [85.7, 2037.0], [85.8, 2037.0], [85.9, 2037.0], [86.0, 2037.0], [86.1, 2037.0], [86.2, 2037.0], [86.3, 2037.0], [86.4, 2037.0], [86.5, 2037.0], [86.6, 2037.0], [86.7, 2037.0], [86.8, 2038.0], [86.9, 2038.0], [87.0, 2038.0], [87.1, 2038.0], [87.2, 2038.0], [87.3, 2038.0], [87.4, 2038.0], [87.5, 2038.0], [87.6, 2038.0], [87.7, 2038.0], [87.8, 2038.0], [87.9, 2038.0], [88.0, 2039.0], [88.1, 2039.0], [88.2, 2039.0], [88.3, 2039.0], [88.4, 2039.0], [88.5, 2039.0], [88.6, 2039.0], [88.7, 2039.0], [88.8, 2039.0], [88.9, 2039.0], [89.0, 2040.0], [89.1, 2040.0], [89.2, 2040.0], [89.3, 2040.0], [89.4, 2040.0], [89.5, 2040.0], [89.6, 2040.0], [89.7, 2040.0], [89.8, 2040.0], [89.9, 2040.0], [90.0, 2041.0], [90.1, 2041.0], [90.2, 2041.0], [90.3, 2041.0], [90.4, 2041.0], [90.5, 2041.0], [90.6, 2041.0], [90.7, 2041.0], [90.8, 2041.0], [90.9, 2041.0], [91.0, 2041.0], [91.1, 2041.0], [91.2, 2041.0], [91.3, 2041.0], [91.4, 2041.0], [91.5, 2041.0], [91.6, 2041.0], [91.7, 2041.0], [91.8, 2042.0], [91.9, 2042.0], [92.0, 2042.0], [92.1, 2042.0], [92.2, 2042.0], [92.3, 2042.0], [92.4, 2042.0], [92.5, 2042.0], [92.6, 2043.0], [92.7, 2043.0], [92.8, 2043.0], [92.9, 2043.0], [93.0, 2044.0], [93.1, 2044.0], [93.2, 2044.0], [93.3, 2044.0], [93.4, 2044.0], [93.5, 2044.0], [93.6, 2045.0], [93.7, 2045.0], [93.8, 2045.0], [93.9, 2045.0], [94.0, 2045.0], [94.1, 2045.0], [94.2, 2045.0], [94.3, 2045.0], [94.4, 2046.0], [94.5, 2046.0], [94.6, 2046.0], [94.7, 2046.0], [94.8, 2047.0], [94.9, 2047.0], [95.0, 2047.0], [95.1, 2047.0], [95.2, 2047.0], [95.3, 2047.0], [95.4, 2048.0], [95.5, 2048.0], [95.6, 2048.0], [95.7, 2048.0], [95.8, 2048.0], [95.9, 2048.0], [96.0, 2048.0], [96.1, 2048.0], [96.2, 2049.0], [96.3, 2049.0], [96.4, 2049.0], [96.5, 2049.0], [96.6, 2049.0], [96.7, 2049.0], [96.8, 2051.0], [96.9, 2051.0], [97.0, 2051.0], [97.1, 2051.0], [97.2, 2052.0], [97.3, 2052.0], [97.4, 2053.0], [97.5, 2053.0], [97.6, 2053.0], [97.7, 2053.0], [97.8, 2055.0], [97.9, 2055.0], [98.0, 2056.0], [98.1, 2056.0], [98.2, 2062.0], [98.3, 2062.0], [98.4, 2062.0], [98.5, 2062.0], [98.6, 2063.0], [98.7, 2063.0], [98.8, 2063.0], [98.9, 2063.0], [99.0, 2064.0], [99.1, 2064.0], [99.2, 2064.0], [99.3, 2064.0], [99.4, 2064.0], [99.5, 2064.0], [99.6, 2064.0], [99.7, 2064.0], [99.8, 2079.0], [99.9, 2079.0]], "isOverall": false, "label": "FTP Request", "isController": false}, {"data": [[0.0, 361.0], [0.1, 361.0], [0.2, 374.0], [0.3, 374.0], [0.4, 378.0], [0.5, 378.0], [0.6, 378.0], [0.7, 380.0], [0.8, 382.0], [0.9, 382.0], [1.0, 384.0], [1.1, 384.0], [1.2, 387.0], [1.3, 387.0], [1.4, 388.0], [1.5, 388.0], [1.6, 393.0], [1.7, 393.0], [1.8, 393.0], [1.9, 393.0], [2.0, 393.0], [2.1, 393.0], [2.2, 398.0], [2.3, 398.0], [2.4, 398.0], [2.5, 398.0], [2.6, 399.0], [2.7, 399.0], [2.8, 401.0], [2.9, 401.0], [3.0, 402.0], [3.1, 402.0], [3.2, 403.0], [3.3, 403.0], [3.4, 403.0], [3.5, 403.0], [3.6, 404.0], [3.7, 404.0], [3.8, 404.0], [3.9, 404.0], [4.0, 405.0], [4.1, 405.0], [4.2, 405.0], [4.3, 405.0], [4.4, 405.0], [4.5, 405.0], [4.6, 406.0], [4.7, 406.0], [4.8, 406.0], [4.9, 406.0], [5.0, 407.0], [5.1, 407.0], [5.2, 407.0], [5.3, 407.0], [5.4, 407.0], [5.5, 407.0], [5.6, 407.0], [5.7, 407.0], [5.8, 409.0], [5.9, 409.0], [6.0, 409.0], [6.1, 409.0], [6.2, 410.0], [6.3, 410.0], [6.4, 412.0], [6.5, 412.0], [6.6, 412.0], [6.7, 413.0], [6.8, 413.0], [6.9, 413.0], [7.0, 413.0], [7.1, 413.0], [7.2, 414.0], [7.3, 414.0], [7.4, 414.0], [7.5, 414.0], [7.6, 414.0], [7.7, 415.0], [7.8, 415.0], [7.9, 415.0], [8.0, 415.0], [8.1, 415.0], [8.2, 415.0], [8.3, 415.0], [8.4, 416.0], [8.5, 416.0], [8.6, 417.0], [8.7, 417.0], [8.8, 417.0], [8.9, 417.0], [9.0, 418.0], [9.1, 418.0], [9.2, 419.0], [9.3, 419.0], [9.4, 419.0], [9.5, 419.0], [9.6, 419.0], [9.7, 419.0], [9.8, 420.0], [9.9, 420.0], [10.0, 421.0], [10.1, 421.0], [10.2, 421.0], [10.3, 421.0], [10.4, 422.0], [10.5, 422.0], [10.6, 422.0], [10.7, 422.0], [10.8, 422.0], [10.9, 422.0], [11.0, 423.0], [11.1, 423.0], [11.2, 423.0], [11.3, 423.0], [11.4, 423.0], [11.5, 423.0], [11.6, 424.0], [11.7, 424.0], [11.8, 424.0], [11.9, 424.0], [12.0, 424.0], [12.1, 424.0], [12.2, 424.0], [12.3, 424.0], [12.4, 424.0], [12.5, 424.0], [12.6, 425.0], [12.7, 425.0], [12.8, 425.0], [12.9, 425.0], [13.0, 426.0], [13.1, 426.0], [13.2, 426.0], [13.3, 426.0], [13.4, 426.0], [13.5, 426.0], [13.6, 427.0], [13.7, 427.0], [13.8, 427.0], [13.9, 427.0], [14.0, 428.0], [14.1, 428.0], [14.2, 428.0], [14.3, 428.0], [14.4, 428.0], [14.5, 428.0], [14.6, 429.0], [14.7, 429.0], [14.8, 430.0], [14.9, 430.0], [15.0, 430.0], [15.1, 430.0], [15.2, 430.0], [15.3, 430.0], [15.4, 430.0], [15.5, 430.0], [15.6, 431.0], [15.7, 431.0], [15.8, 431.0], [15.9, 431.0], [16.0, 431.0], [16.1, 431.0], [16.2, 432.0], [16.3, 432.0], [16.4, 432.0], [16.5, 432.0], [16.6, 433.0], [16.7, 433.0], [16.8, 433.0], [16.9, 433.0], [17.0, 433.0], [17.1, 433.0], [17.2, 433.0], [17.3, 433.0], [17.4, 433.0], [17.5, 433.0], [17.6, 433.0], [17.7, 433.0], [17.8, 433.0], [17.9, 433.0], [18.0, 434.0], [18.1, 434.0], [18.2, 434.0], [18.3, 434.0], [18.4, 434.0], [18.5, 434.0], [18.6, 434.0], [18.7, 434.0], [18.8, 435.0], [18.9, 435.0], [19.0, 435.0], [19.1, 435.0], [19.2, 435.0], [19.3, 435.0], [19.4, 435.0], [19.5, 435.0], [19.6, 436.0], [19.7, 436.0], [19.8, 436.0], [19.9, 436.0], [20.0, 436.0], [20.1, 436.0], [20.2, 437.0], [20.3, 437.0], [20.4, 437.0], [20.5, 437.0], [20.6, 437.0], [20.7, 437.0], [20.8, 437.0], [20.9, 437.0], [21.0, 438.0], [21.1, 438.0], [21.2, 438.0], [21.3, 438.0], [21.4, 439.0], [21.5, 439.0], [21.6, 439.0], [21.7, 439.0], [21.8, 439.0], [21.9, 439.0], [22.0, 439.0], [22.1, 439.0], [22.2, 440.0], [22.3, 440.0], [22.4, 440.0], [22.5, 440.0], [22.6, 440.0], [22.7, 440.0], [22.8, 440.0], [22.9, 440.0], [23.0, 440.0], [23.1, 440.0], [23.2, 441.0], [23.3, 441.0], [23.4, 441.0], [23.5, 441.0], [23.6, 441.0], [23.7, 441.0], [23.8, 441.0], [23.9, 441.0], [24.0, 441.0], [24.1, 441.0], [24.2, 442.0], [24.3, 442.0], [24.4, 442.0], [24.5, 442.0], [24.6, 442.0], [24.7, 442.0], [24.8, 442.0], [24.9, 442.0], [25.0, 442.0], [25.1, 442.0], [25.2, 442.0], [25.3, 442.0], [25.4, 443.0], [25.5, 443.0], [25.6, 443.0], [25.7, 443.0], [25.8, 443.0], [25.9, 443.0], [26.0, 443.0], [26.1, 443.0], [26.2, 444.0], [26.3, 444.0], [26.4, 444.0], [26.5, 444.0], [26.6, 444.0], [26.7, 444.0], [26.8, 444.0], [26.9, 444.0], [27.0, 444.0], [27.1, 444.0], [27.2, 444.0], [27.3, 444.0], [27.4, 445.0], [27.5, 445.0], [27.6, 445.0], [27.7, 445.0], [27.8, 445.0], [27.9, 445.0], [28.0, 445.0], [28.1, 445.0], [28.2, 445.0], [28.3, 445.0], [28.4, 445.0], [28.5, 445.0], [28.6, 446.0], [28.7, 446.0], [28.8, 446.0], [28.9, 446.0], [29.0, 446.0], [29.1, 446.0], [29.2, 447.0], [29.3, 447.0], [29.4, 447.0], [29.5, 447.0], [29.6, 447.0], [29.7, 447.0], [29.8, 447.0], [29.9, 447.0], [30.0, 448.0], [30.1, 448.0], [30.2, 448.0], [30.3, 448.0], [30.4, 448.0], [30.5, 448.0], [30.6, 448.0], [30.7, 448.0], [30.8, 449.0], [30.9, 449.0], [31.0, 449.0], [31.1, 449.0], [31.2, 449.0], [31.3, 449.0], [31.4, 449.0], [31.5, 449.0], [31.6, 450.0], [31.7, 450.0], [31.8, 451.0], [31.9, 451.0], [32.0, 451.0], [32.1, 451.0], [32.2, 451.0], [32.3, 451.0], [32.4, 451.0], [32.5, 451.0], [32.6, 452.0], [32.7, 452.0], [32.8, 452.0], [32.9, 452.0], [33.0, 453.0], [33.1, 453.0], [33.2, 453.0], [33.3, 453.0], [33.4, 453.0], [33.5, 453.0], [33.6, 453.0], [33.7, 453.0], [33.8, 453.0], [33.9, 453.0], [34.0, 454.0], [34.1, 454.0], [34.2, 454.0], [34.3, 454.0], [34.4, 454.0], [34.5, 454.0], [34.6, 454.0], [34.7, 454.0], [34.8, 454.0], [34.9, 454.0], [35.0, 454.0], [35.1, 454.0], [35.2, 455.0], [35.3, 455.0], [35.4, 455.0], [35.5, 455.0], [35.6, 456.0], [35.7, 456.0], [35.8, 456.0], [35.9, 456.0], [36.0, 456.0], [36.1, 456.0], [36.2, 456.0], [36.3, 456.0], [36.4, 456.0], [36.5, 456.0], [36.6, 456.0], [36.7, 456.0], [36.8, 456.0], [36.9, 457.0], [37.0, 457.0], [37.1, 457.0], [37.2, 458.0], [37.3, 458.0], [37.4, 458.0], [37.5, 458.0], [37.6, 458.0], [37.7, 458.0], [37.8, 458.0], [37.9, 459.0], [38.0, 459.0], [38.1, 459.0], [38.2, 459.0], [38.3, 459.0], [38.4, 459.0], [38.5, 460.0], [38.6, 460.0], [38.7, 460.0], [38.8, 460.0], [38.9, 460.0], [39.0, 460.0], [39.1, 461.0], [39.2, 461.0], [39.3, 461.0], [39.4, 461.0], [39.5, 461.0], [39.6, 461.0], [39.7, 462.0], [39.8, 462.0], [39.9, 462.0], [40.0, 462.0], [40.1, 463.0], [40.2, 463.0], [40.3, 463.0], [40.4, 463.0], [40.5, 463.0], [40.6, 463.0], [40.7, 463.0], [40.8, 463.0], [40.9, 463.0], [41.0, 463.0], [41.1, 464.0], [41.2, 464.0], [41.3, 464.0], [41.4, 464.0], [41.5, 464.0], [41.6, 464.0], [41.7, 465.0], [41.8, 465.0], [41.9, 465.0], [42.0, 465.0], [42.1, 465.0], [42.2, 465.0], [42.3, 465.0], [42.4, 465.0], [42.5, 465.0], [42.6, 465.0], [42.7, 466.0], [42.8, 466.0], [42.9, 466.0], [43.0, 466.0], [43.1, 466.0], [43.2, 466.0], [43.3, 466.0], [43.4, 466.0], [43.5, 467.0], [43.6, 467.0], [43.7, 467.0], [43.8, 467.0], [43.9, 467.0], [44.0, 467.0], [44.1, 467.0], [44.2, 468.0], [44.3, 468.0], [44.4, 468.0], [44.5, 468.0], [44.6, 468.0], [44.7, 468.0], [44.8, 468.0], [44.9, 468.0], [45.0, 468.0], [45.1, 468.0], [45.2, 468.0], [45.3, 468.0], [45.4, 468.0], [45.5, 468.0], [45.6, 468.0], [45.7, 468.0], [45.8, 468.0], [45.9, 469.0], [46.0, 469.0], [46.1, 469.0], [46.2, 469.0], [46.3, 469.0], [46.4, 469.0], [46.5, 469.0], [46.6, 470.0], [46.7, 470.0], [46.8, 470.0], [46.9, 470.0], [47.0, 470.0], [47.1, 470.0], [47.2, 471.0], [47.3, 471.0], [47.4, 471.0], [47.5, 471.0], [47.6, 471.0], [47.7, 471.0], [47.8, 471.0], [47.9, 471.0], [48.0, 472.0], [48.1, 472.0], [48.2, 472.0], [48.3, 472.0], [48.4, 472.0], [48.5, 472.0], [48.6, 472.0], [48.7, 472.0], [48.8, 473.0], [48.9, 473.0], [49.0, 473.0], [49.1, 473.0], [49.2, 473.0], [49.3, 473.0], [49.4, 474.0], [49.5, 474.0], [49.6, 474.0], [49.7, 474.0], [49.8, 474.0], [49.9, 474.0], [50.0, 474.0], [50.1, 474.0], [50.2, 474.0], [50.3, 474.0], [50.4, 475.0], [50.5, 475.0], [50.6, 476.0], [50.7, 476.0], [50.8, 476.0], [50.9, 476.0], [51.0, 476.0], [51.1, 476.0], [51.2, 476.0], [51.3, 476.0], [51.4, 477.0], [51.5, 477.0], [51.6, 478.0], [51.7, 478.0], [51.8, 478.0], [51.9, 478.0], [52.0, 478.0], [52.1, 478.0], [52.2, 479.0], [52.3, 479.0], [52.4, 479.0], [52.5, 479.0], [52.6, 479.0], [52.7, 479.0], [52.8, 479.0], [52.9, 480.0], [53.0, 480.0], [53.1, 480.0], [53.2, 481.0], [53.3, 481.0], [53.4, 481.0], [53.5, 481.0], [53.6, 481.0], [53.7, 481.0], [53.8, 481.0], [53.9, 481.0], [54.0, 481.0], [54.1, 481.0], [54.2, 482.0], [54.3, 482.0], [54.4, 482.0], [54.5, 482.0], [54.6, 483.0], [54.7, 483.0], [54.8, 483.0], [54.9, 483.0], [55.0, 483.0], [55.1, 483.0], [55.2, 483.0], [55.3, 483.0], [55.4, 483.0], [55.5, 483.0], [55.6, 484.0], [55.7, 484.0], [55.8, 484.0], [55.9, 485.0], [56.0, 485.0], [56.1, 485.0], [56.2, 485.0], [56.3, 485.0], [56.4, 485.0], [56.5, 485.0], [56.6, 485.0], [56.7, 485.0], [56.8, 485.0], [56.9, 485.0], [57.0, 485.0], [57.1, 485.0], [57.2, 487.0], [57.3, 487.0], [57.4, 487.0], [57.5, 487.0], [57.6, 487.0], [57.7, 487.0], [57.8, 487.0], [57.9, 487.0], [58.0, 487.0], [58.1, 487.0], [58.2, 487.0], [58.3, 487.0], [58.4, 487.0], [58.5, 487.0], [58.6, 488.0], [58.7, 488.0], [58.8, 488.0], [58.9, 488.0], [59.0, 489.0], [59.1, 489.0], [59.2, 489.0], [59.3, 489.0], [59.4, 489.0], [59.5, 489.0], [59.6, 490.0], [59.7, 490.0], [59.8, 490.0], [59.9, 490.0], [60.0, 491.0], [60.1, 491.0], [60.2, 492.0], [60.3, 492.0], [60.4, 492.0], [60.5, 492.0], [60.6, 492.0], [60.7, 492.0], [60.8, 492.0], [60.9, 492.0], [61.0, 492.0], [61.1, 492.0], [61.2, 493.0], [61.3, 493.0], [61.4, 493.0], [61.5, 493.0], [61.6, 494.0], [61.7, 494.0], [61.8, 494.0], [61.9, 494.0], [62.0, 494.0], [62.1, 494.0], [62.2, 494.0], [62.3, 494.0], [62.4, 495.0], [62.5, 495.0], [62.6, 495.0], [62.7, 495.0], [62.8, 495.0], [62.9, 495.0], [63.0, 495.0], [63.1, 495.0], [63.2, 496.0], [63.3, 496.0], [63.4, 496.0], [63.5, 496.0], [63.6, 496.0], [63.7, 496.0], [63.8, 496.0], [63.9, 496.0], [64.0, 497.0], [64.1, 497.0], [64.2, 497.0], [64.3, 497.0], [64.4, 497.0], [64.5, 497.0], [64.6, 497.0], [64.7, 497.0], [64.8, 497.0], [64.9, 497.0], [65.0, 498.0], [65.1, 498.0], [65.2, 498.0], [65.3, 498.0], [65.4, 499.0], [65.5, 499.0], [65.6, 499.0], [65.7, 499.0], [65.8, 499.0], [65.9, 499.0], [66.0, 499.0], [66.1, 499.0], [66.2, 499.0], [66.3, 499.0], [66.4, 500.0], [66.5, 500.0], [66.6, 500.0], [66.7, 501.0], [66.8, 501.0], [66.9, 501.0], [67.0, 501.0], [67.1, 501.0], [67.2, 501.0], [67.3, 501.0], [67.4, 502.0], [67.5, 502.0], [67.6, 502.0], [67.7, 502.0], [67.8, 502.0], [67.9, 502.0], [68.0, 502.0], [68.1, 502.0], [68.2, 503.0], [68.3, 503.0], [68.4, 503.0], [68.5, 503.0], [68.6, 503.0], [68.7, 504.0], [68.8, 504.0], [68.9, 504.0], [69.0, 504.0], [69.1, 504.0], [69.2, 504.0], [69.3, 504.0], [69.4, 504.0], [69.5, 504.0], [69.6, 504.0], [69.7, 504.0], [69.8, 504.0], [69.9, 505.0], [70.0, 505.0], [70.1, 505.0], [70.2, 505.0], [70.3, 505.0], [70.4, 505.0], [70.5, 505.0], [70.6, 505.0], [70.7, 505.0], [70.8, 505.0], [70.9, 506.0], [71.0, 506.0], [71.1, 506.0], [71.2, 506.0], [71.3, 507.0], [71.4, 507.0], [71.5, 507.0], [71.6, 507.0], [71.7, 507.0], [71.8, 507.0], [71.9, 507.0], [72.0, 507.0], [72.1, 507.0], [72.2, 507.0], [72.3, 508.0], [72.4, 508.0], [72.5, 508.0], [72.6, 508.0], [72.7, 508.0], [72.8, 508.0], [72.9, 508.0], [73.0, 508.0], [73.1, 508.0], [73.2, 508.0], [73.3, 509.0], [73.4, 509.0], [73.5, 509.0], [73.6, 509.0], [73.7, 509.0], [73.8, 509.0], [73.9, 510.0], [74.0, 510.0], [74.1, 510.0], [74.2, 510.0], [74.3, 510.0], [74.4, 510.0], [74.5, 510.0], [74.6, 510.0], [74.7, 511.0], [74.8, 511.0], [74.9, 511.0], [75.0, 511.0], [75.1, 512.0], [75.2, 512.0], [75.3, 513.0], [75.4, 513.0], [75.5, 513.0], [75.6, 513.0], [75.7, 513.0], [75.8, 513.0], [75.9, 513.0], [76.0, 513.0], [76.1, 513.0], [76.2, 513.0], [76.3, 514.0], [76.4, 514.0], [76.5, 514.0], [76.6, 514.0], [76.7, 514.0], [76.8, 514.0], [76.9, 514.0], [77.0, 514.0], [77.1, 514.0], [77.2, 514.0], [77.3, 514.0], [77.4, 514.0], [77.5, 515.0], [77.6, 515.0], [77.7, 515.0], [77.8, 515.0], [77.9, 516.0], [78.0, 516.0], [78.1, 516.0], [78.2, 516.0], [78.3, 517.0], [78.4, 517.0], [78.5, 517.0], [78.6, 517.0], [78.7, 517.0], [78.8, 517.0], [78.9, 517.0], [79.0, 517.0], [79.1, 518.0], [79.2, 518.0], [79.3, 519.0], [79.4, 519.0], [79.5, 521.0], [79.6, 521.0], [79.7, 521.0], [79.8, 521.0], [79.9, 521.0], [80.0, 521.0], [80.1, 521.0], [80.2, 521.0], [80.3, 521.0], [80.4, 521.0], [80.5, 522.0], [80.6, 522.0], [80.7, 522.0], [80.8, 522.0], [80.9, 522.0], [81.0, 522.0], [81.1, 522.0], [81.2, 522.0], [81.3, 523.0], [81.4, 523.0], [81.5, 523.0], [81.6, 523.0], [81.7, 523.0], [81.8, 523.0], [81.9, 524.0], [82.0, 524.0], [82.1, 524.0], [82.2, 524.0], [82.3, 524.0], [82.4, 524.0], [82.5, 525.0], [82.6, 525.0], [82.7, 525.0], [82.8, 525.0], [82.9, 525.0], [83.0, 525.0], [83.1, 525.0], [83.2, 525.0], [83.3, 526.0], [83.4, 526.0], [83.5, 526.0], [83.6, 526.0], [83.7, 526.0], [83.8, 526.0], [83.9, 526.0], [84.0, 526.0], [84.1, 527.0], [84.2, 527.0], [84.3, 528.0], [84.4, 528.0], [84.5, 528.0], [84.6, 528.0], [84.7, 529.0], [84.8, 529.0], [84.9, 529.0], [85.0, 529.0], [85.1, 530.0], [85.2, 530.0], [85.3, 531.0], [85.4, 531.0], [85.5, 531.0], [85.6, 531.0], [85.7, 531.0], [85.8, 531.0], [85.9, 531.0], [86.0, 531.0], [86.1, 532.0], [86.2, 532.0], [86.3, 533.0], [86.4, 533.0], [86.5, 534.0], [86.6, 534.0], [86.7, 535.0], [86.8, 535.0], [86.9, 536.0], [87.0, 536.0], [87.1, 537.0], [87.2, 537.0], [87.3, 537.0], [87.4, 537.0], [87.5, 537.0], [87.6, 537.0], [87.7, 538.0], [87.8, 538.0], [87.9, 538.0], [88.0, 538.0], [88.1, 539.0], [88.2, 539.0], [88.3, 540.0], [88.4, 540.0], [88.5, 540.0], [88.6, 540.0], [88.7, 541.0], [88.8, 541.0], [88.9, 541.0], [89.0, 541.0], [89.1, 542.0], [89.2, 542.0], [89.3, 542.0], [89.4, 542.0], [89.5, 543.0], [89.6, 543.0], [89.7, 544.0], [89.8, 544.0], [89.9, 545.0], [90.0, 545.0], [90.1, 545.0], [90.2, 545.0], [90.3, 545.0], [90.4, 545.0], [90.5, 548.0], [90.6, 548.0], [90.7, 549.0], [90.8, 549.0], [90.9, 550.0], [91.0, 550.0], [91.1, 550.0], [91.2, 550.0], [91.3, 552.0], [91.4, 552.0], [91.5, 553.0], [91.6, 553.0], [91.7, 554.0], [91.8, 554.0], [91.9, 556.0], [92.0, 556.0], [92.1, 556.0], [92.2, 556.0], [92.3, 558.0], [92.4, 558.0], [92.5, 558.0], [92.6, 558.0], [92.7, 560.0], [92.8, 560.0], [92.9, 563.0], [93.0, 563.0], [93.1, 568.0], [93.2, 568.0], [93.3, 570.0], [93.4, 570.0], [93.5, 570.0], [93.6, 570.0], [93.7, 571.0], [93.8, 571.0], [93.9, 576.0], [94.0, 576.0], [94.1, 576.0], [94.2, 576.0], [94.3, 576.0], [94.4, 576.0], [94.5, 582.0], [94.6, 582.0], [94.7, 583.0], [94.8, 583.0], [94.9, 590.0], [95.0, 590.0], [95.1, 600.0], [95.2, 600.0], [95.3, 603.0], [95.4, 603.0], [95.5, 603.0], [95.6, 603.0], [95.7, 604.0], [95.8, 604.0], [95.9, 643.0], [96.0, 643.0], [96.1, 647.0], [96.2, 647.0], [96.3, 696.0], [96.4, 696.0], [96.5, 715.0], [96.6, 715.0], [96.7, 748.0], [96.8, 748.0], [96.9, 817.0], [97.0, 817.0], [97.1, 846.0], [97.2, 846.0], [97.3, 846.0], [97.4, 846.0], [97.5, 854.0], [97.6, 854.0], [97.7, 952.0], [97.8, 952.0], [97.9, 967.0], [98.0, 967.0], [98.1, 1047.0], [98.2, 1047.0], [98.3, 1065.0], [98.4, 1065.0], [98.5, 1148.0], [98.6, 1148.0], [98.7, 1166.0], [98.8, 1166.0], [98.9, 1167.0], [99.0, 1167.0], [99.1, 1186.0], [99.2, 1186.0], [99.3, 1285.0], [99.4, 1285.0], [99.5, 1287.0], [99.6, 1287.0], [99.7, 1295.0], [99.8, 1295.0], [99.9, 1297.0], [100.0, 1297.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 148.0], [0.1, 148.0], [0.2, 151.0], [0.3, 151.0], [0.4, 153.0], [0.5, 153.0], [0.6, 153.0], [0.7, 155.0], [0.8, 159.0], [0.9, 159.0], [1.0, 160.0], [1.1, 160.0], [1.2, 161.0], [1.3, 161.0], [1.4, 162.0], [1.5, 162.0], [1.6, 162.0], [1.7, 162.0], [1.8, 163.0], [1.9, 163.0], [2.0, 163.0], [2.1, 163.0], [2.2, 164.0], [2.3, 164.0], [2.4, 165.0], [2.5, 165.0], [2.6, 165.0], [2.7, 165.0], [2.8, 165.0], [2.9, 165.0], [3.0, 166.0], [3.1, 166.0], [3.2, 166.0], [3.3, 166.0], [3.4, 166.0], [3.5, 166.0], [3.6, 166.0], [3.7, 166.0], [3.8, 167.0], [3.9, 167.0], [4.0, 167.0], [4.1, 167.0], [4.2, 167.0], [4.3, 167.0], [4.4, 168.0], [4.5, 168.0], [4.6, 168.0], [4.7, 168.0], [4.8, 168.0], [4.9, 168.0], [5.0, 168.0], [5.1, 168.0], [5.2, 168.0], [5.3, 168.0], [5.4, 168.0], [5.5, 168.0], [5.6, 169.0], [5.7, 169.0], [5.8, 169.0], [5.9, 169.0], [6.0, 169.0], [6.1, 169.0], [6.2, 169.0], [6.3, 169.0], [6.4, 169.0], [6.5, 169.0], [6.6, 169.0], [6.7, 169.0], [6.8, 170.0], [6.9, 170.0], [7.0, 170.0], [7.1, 170.0], [7.2, 170.0], [7.3, 170.0], [7.4, 170.0], [7.5, 170.0], [7.6, 170.0], [7.7, 170.0], [7.8, 170.0], [7.9, 170.0], [8.0, 170.0], [8.1, 170.0], [8.2, 170.0], [8.3, 170.0], [8.4, 170.0], [8.5, 170.0], [8.6, 170.0], [8.7, 170.0], [8.8, 170.0], [8.9, 170.0], [9.0, 171.0], [9.1, 171.0], [9.2, 171.0], [9.3, 171.0], [9.4, 171.0], [9.5, 171.0], [9.6, 171.0], [9.7, 171.0], [9.8, 172.0], [9.9, 172.0], [10.0, 172.0], [10.1, 172.0], [10.2, 172.0], [10.3, 172.0], [10.4, 172.0], [10.5, 172.0], [10.6, 172.0], [10.7, 172.0], [10.8, 172.0], [10.9, 172.0], [11.0, 173.0], [11.1, 173.0], [11.2, 173.0], [11.3, 173.0], [11.4, 173.0], [11.5, 173.0], [11.6, 173.0], [11.7, 173.0], [11.8, 173.0], [11.9, 173.0], [12.0, 174.0], [12.1, 174.0], [12.2, 174.0], [12.3, 174.0], [12.4, 174.0], [12.5, 174.0], [12.6, 175.0], [12.7, 175.0], [12.8, 175.0], [12.9, 175.0], [13.0, 175.0], [13.1, 175.0], [13.2, 175.0], [13.3, 175.0], [13.4, 175.0], [13.5, 175.0], [13.6, 175.0], [13.7, 175.0], [13.8, 175.0], [13.9, 175.0], [14.0, 176.0], [14.1, 176.0], [14.2, 176.0], [14.3, 176.0], [14.4, 176.0], [14.5, 176.0], [14.6, 176.0], [14.7, 176.0], [14.8, 176.0], [14.9, 176.0], [15.0, 176.0], [15.1, 176.0], [15.2, 176.0], [15.3, 176.0], [15.4, 176.0], [15.5, 176.0], [15.6, 176.0], [15.7, 176.0], [15.8, 176.0], [15.9, 176.0], [16.0, 177.0], [16.1, 177.0], [16.2, 177.0], [16.3, 177.0], [16.4, 177.0], [16.5, 177.0], [16.6, 177.0], [16.7, 177.0], [16.8, 177.0], [16.9, 177.0], [17.0, 177.0], [17.1, 177.0], [17.2, 177.0], [17.3, 177.0], [17.4, 178.0], [17.5, 178.0], [17.6, 178.0], [17.7, 178.0], [17.8, 178.0], [17.9, 178.0], [18.0, 178.0], [18.1, 178.0], [18.2, 178.0], [18.3, 178.0], [18.4, 178.0], [18.5, 178.0], [18.6, 178.0], [18.7, 178.0], [18.8, 178.0], [18.9, 178.0], [19.0, 178.0], [19.1, 178.0], [19.2, 178.0], [19.3, 178.0], [19.4, 178.0], [19.5, 178.0], [19.6, 178.0], [19.7, 178.0], [19.8, 178.0], [19.9, 178.0], [20.0, 179.0], [20.1, 179.0], [20.2, 179.0], [20.3, 179.0], [20.4, 179.0], [20.5, 179.0], [20.6, 179.0], [20.7, 179.0], [20.8, 179.0], [20.9, 179.0], [21.0, 179.0], [21.1, 179.0], [21.2, 179.0], [21.3, 179.0], [21.4, 179.0], [21.5, 179.0], [21.6, 179.0], [21.7, 179.0], [21.8, 179.0], [21.9, 179.0], [22.0, 180.0], [22.1, 180.0], [22.2, 180.0], [22.3, 180.0], [22.4, 180.0], [22.5, 180.0], [22.6, 180.0], [22.7, 180.0], [22.8, 180.0], [22.9, 180.0], [23.0, 180.0], [23.1, 180.0], [23.2, 180.0], [23.3, 180.0], [23.4, 180.0], [23.5, 180.0], [23.6, 180.0], [23.7, 180.0], [23.8, 180.0], [23.9, 180.0], [24.0, 180.0], [24.1, 180.0], [24.2, 180.0], [24.3, 180.0], [24.4, 181.0], [24.5, 181.0], [24.6, 181.0], [24.7, 181.0], [24.8, 181.0], [24.9, 181.0], [25.0, 181.0], [25.1, 181.0], [25.2, 181.0], [25.3, 181.0], [25.4, 181.0], [25.5, 181.0], [25.6, 181.0], [25.7, 181.0], [25.8, 182.0], [25.9, 182.0], [26.0, 182.0], [26.1, 182.0], [26.2, 182.0], [26.3, 182.0], [26.4, 182.0], [26.5, 182.0], [26.6, 182.0], [26.7, 182.0], [26.8, 182.0], [26.9, 182.0], [27.0, 182.0], [27.1, 182.0], [27.2, 182.0], [27.3, 182.0], [27.4, 182.0], [27.5, 182.0], [27.6, 183.0], [27.7, 183.0], [27.8, 183.0], [27.9, 183.0], [28.0, 183.0], [28.1, 183.0], [28.2, 183.0], [28.3, 183.0], [28.4, 183.0], [28.5, 183.0], [28.6, 183.0], [28.7, 183.0], [28.8, 184.0], [28.9, 184.0], [29.0, 184.0], [29.1, 184.0], [29.2, 184.0], [29.3, 184.0], [29.4, 184.0], [29.5, 184.0], [29.6, 184.0], [29.7, 184.0], [29.8, 184.0], [29.9, 184.0], [30.0, 184.0], [30.1, 184.0], [30.2, 184.0], [30.3, 184.0], [30.4, 184.0], [30.5, 184.0], [30.6, 184.0], [30.7, 184.0], [30.8, 184.0], [30.9, 184.0], [31.0, 185.0], [31.1, 185.0], [31.2, 185.0], [31.3, 185.0], [31.4, 185.0], [31.5, 185.0], [31.6, 185.0], [31.7, 185.0], [31.8, 185.0], [31.9, 185.0], [32.0, 185.0], [32.1, 185.0], [32.2, 185.0], [32.3, 185.0], [32.4, 185.0], [32.5, 185.0], [32.6, 186.0], [32.7, 186.0], [32.8, 186.0], [32.9, 186.0], [33.0, 186.0], [33.1, 186.0], [33.2, 186.0], [33.3, 186.0], [33.4, 186.0], [33.5, 186.0], [33.6, 186.0], [33.7, 186.0], [33.8, 187.0], [33.9, 187.0], [34.0, 187.0], [34.1, 187.0], [34.2, 187.0], [34.3, 187.0], [34.4, 187.0], [34.5, 187.0], [34.6, 187.0], [34.7, 187.0], [34.8, 187.0], [34.9, 187.0], [35.0, 187.0], [35.1, 187.0], [35.2, 187.0], [35.3, 187.0], [35.4, 187.0], [35.5, 187.0], [35.6, 187.0], [35.7, 187.0], [35.8, 187.0], [35.9, 187.0], [36.0, 187.0], [36.1, 187.0], [36.2, 187.0], [36.3, 187.0], [36.4, 188.0], [36.5, 188.0], [36.6, 188.0], [36.7, 188.0], [36.8, 188.0], [36.9, 188.0], [37.0, 188.0], [37.1, 188.0], [37.2, 188.0], [37.3, 188.0], [37.4, 188.0], [37.5, 188.0], [37.6, 188.0], [37.7, 188.0], [37.8, 188.0], [37.9, 188.0], [38.0, 188.0], [38.1, 188.0], [38.2, 188.0], [38.3, 188.0], [38.4, 188.0], [38.5, 188.0], [38.6, 188.0], [38.7, 188.0], [38.8, 188.0], [38.9, 188.0], [39.0, 188.0], [39.1, 188.0], [39.2, 189.0], [39.3, 189.0], [39.4, 189.0], [39.5, 189.0], [39.6, 189.0], [39.7, 189.0], [39.8, 189.0], [39.9, 189.0], [40.0, 189.0], [40.1, 189.0], [40.2, 189.0], [40.3, 189.0], [40.4, 189.0], [40.5, 189.0], [40.6, 189.0], [40.7, 189.0], [40.8, 189.0], [40.9, 189.0], [41.0, 190.0], [41.1, 190.0], [41.2, 190.0], [41.3, 190.0], [41.4, 190.0], [41.5, 190.0], [41.6, 190.0], [41.7, 190.0], [41.8, 190.0], [41.9, 190.0], [42.0, 190.0], [42.1, 190.0], [42.2, 190.0], [42.3, 190.0], [42.4, 190.0], [42.5, 190.0], [42.6, 190.0], [42.7, 190.0], [42.8, 190.0], [42.9, 190.0], [43.0, 190.0], [43.1, 190.0], [43.2, 191.0], [43.3, 191.0], [43.4, 191.0], [43.5, 191.0], [43.6, 191.0], [43.7, 191.0], [43.8, 191.0], [43.9, 191.0], [44.0, 191.0], [44.1, 191.0], [44.2, 191.0], [44.3, 191.0], [44.4, 191.0], [44.5, 191.0], [44.6, 191.0], [44.7, 191.0], [44.8, 191.0], [44.9, 191.0], [45.0, 191.0], [45.1, 191.0], [45.2, 191.0], [45.3, 191.0], [45.4, 192.0], [45.5, 192.0], [45.6, 192.0], [45.7, 192.0], [45.8, 192.0], [45.9, 192.0], [46.0, 192.0], [46.1, 192.0], [46.2, 192.0], [46.3, 192.0], [46.4, 192.0], [46.5, 192.0], [46.6, 192.0], [46.7, 192.0], [46.8, 192.0], [46.9, 192.0], [47.0, 192.0], [47.1, 192.0], [47.2, 192.0], [47.3, 192.0], [47.4, 192.0], [47.5, 192.0], [47.6, 192.0], [47.7, 192.0], [47.8, 192.0], [47.9, 192.0], [48.0, 192.0], [48.1, 192.0], [48.2, 192.0], [48.3, 192.0], [48.4, 193.0], [48.5, 193.0], [48.6, 193.0], [48.7, 193.0], [48.8, 193.0], [48.9, 193.0], [49.0, 193.0], [49.1, 193.0], [49.2, 193.0], [49.3, 193.0], [49.4, 193.0], [49.5, 193.0], [49.6, 193.0], [49.7, 193.0], [49.8, 193.0], [49.9, 193.0], [50.0, 193.0], [50.1, 193.0], [50.2, 193.0], [50.3, 193.0], [50.4, 193.0], [50.5, 193.0], [50.6, 193.0], [50.7, 193.0], [50.8, 193.0], [50.9, 193.0], [51.0, 194.0], [51.1, 194.0], [51.2, 194.0], [51.3, 194.0], [51.4, 194.0], [51.5, 194.0], [51.6, 195.0], [51.7, 195.0], [51.8, 195.0], [51.9, 195.0], [52.0, 195.0], [52.1, 195.0], [52.2, 195.0], [52.3, 195.0], [52.4, 196.0], [52.5, 196.0], [52.6, 196.0], [52.7, 196.0], [52.8, 196.0], [52.9, 196.0], [53.0, 196.0], [53.1, 196.0], [53.2, 196.0], [53.3, 196.0], [53.4, 196.0], [53.5, 196.0], [53.6, 196.0], [53.7, 196.0], [53.8, 196.0], [53.9, 196.0], [54.0, 197.0], [54.1, 197.0], [54.2, 197.0], [54.3, 197.0], [54.4, 197.0], [54.5, 197.0], [54.6, 197.0], [54.7, 197.0], [54.8, 197.0], [54.9, 197.0], [55.0, 197.0], [55.1, 197.0], [55.2, 198.0], [55.3, 198.0], [55.4, 198.0], [55.5, 198.0], [55.6, 198.0], [55.7, 198.0], [55.8, 198.0], [55.9, 198.0], [56.0, 198.0], [56.1, 198.0], [56.2, 198.0], [56.3, 198.0], [56.4, 198.0], [56.5, 198.0], [56.6, 199.0], [56.7, 199.0], [56.8, 199.0], [56.9, 199.0], [57.0, 199.0], [57.1, 199.0], [57.2, 199.0], [57.3, 199.0], [57.4, 199.0], [57.5, 199.0], [57.6, 199.0], [57.7, 199.0], [57.8, 199.0], [57.9, 199.0], [58.0, 200.0], [58.1, 200.0], [58.2, 200.0], [58.3, 200.0], [58.4, 200.0], [58.5, 200.0], [58.6, 200.0], [58.7, 200.0], [58.8, 200.0], [58.9, 200.0], [59.0, 200.0], [59.1, 200.0], [59.2, 200.0], [59.3, 200.0], [59.4, 200.0], [59.5, 200.0], [59.6, 200.0], [59.7, 200.0], [59.8, 201.0], [59.9, 201.0], [60.0, 201.0], [60.1, 201.0], [60.2, 201.0], [60.3, 201.0], [60.4, 201.0], [60.5, 201.0], [60.6, 201.0], [60.7, 201.0], [60.8, 202.0], [60.9, 202.0], [61.0, 202.0], [61.1, 202.0], [61.2, 202.0], [61.3, 202.0], [61.4, 202.0], [61.5, 202.0], [61.6, 202.0], [61.7, 202.0], [61.8, 202.0], [61.9, 202.0], [62.0, 202.0], [62.1, 202.0], [62.2, 202.0], [62.3, 202.0], [62.4, 202.0], [62.5, 202.0], [62.6, 202.0], [62.7, 202.0], [62.8, 202.0], [62.9, 202.0], [63.0, 202.0], [63.1, 202.0], [63.2, 202.0], [63.3, 202.0], [63.4, 202.0], [63.5, 202.0], [63.6, 202.0], [63.7, 202.0], [63.8, 202.0], [63.9, 202.0], [64.0, 203.0], [64.1, 203.0], [64.2, 203.0], [64.3, 203.0], [64.4, 203.0], [64.5, 203.0], [64.6, 203.0], [64.7, 203.0], [64.8, 203.0], [64.9, 203.0], [65.0, 203.0], [65.1, 203.0], [65.2, 204.0], [65.3, 204.0], [65.4, 204.0], [65.5, 204.0], [65.6, 204.0], [65.7, 204.0], [65.8, 204.0], [65.9, 204.0], [66.0, 204.0], [66.1, 204.0], [66.2, 204.0], [66.3, 204.0], [66.4, 205.0], [66.5, 205.0], [66.6, 205.0], [66.7, 205.0], [66.8, 205.0], [66.9, 205.0], [67.0, 205.0], [67.1, 205.0], [67.2, 205.0], [67.3, 205.0], [67.4, 205.0], [67.5, 205.0], [67.6, 205.0], [67.7, 205.0], [67.8, 205.0], [67.9, 205.0], [68.0, 206.0], [68.1, 206.0], [68.2, 206.0], [68.3, 206.0], [68.4, 206.0], [68.5, 206.0], [68.6, 206.0], [68.7, 206.0], [68.8, 207.0], [68.9, 207.0], [69.0, 207.0], [69.1, 207.0], [69.2, 207.0], [69.3, 207.0], [69.4, 207.0], [69.5, 207.0], [69.6, 207.0], [69.7, 207.0], [69.8, 207.0], [69.9, 207.0], [70.0, 207.0], [70.1, 207.0], [70.2, 207.0], [70.3, 207.0], [70.4, 208.0], [70.5, 208.0], [70.6, 208.0], [70.7, 208.0], [70.8, 208.0], [70.9, 208.0], [71.0, 208.0], [71.1, 208.0], [71.2, 208.0], [71.3, 208.0], [71.4, 209.0], [71.5, 209.0], [71.6, 209.0], [71.7, 209.0], [71.8, 209.0], [71.9, 209.0], [72.0, 209.0], [72.1, 209.0], [72.2, 209.0], [72.3, 209.0], [72.4, 210.0], [72.5, 210.0], [72.6, 210.0], [72.7, 210.0], [72.8, 210.0], [72.9, 210.0], [73.0, 210.0], [73.1, 210.0], [73.2, 210.0], [73.3, 210.0], [73.4, 211.0], [73.5, 211.0], [73.6, 211.0], [73.7, 211.0], [73.8, 212.0], [73.9, 212.0], [74.0, 212.0], [74.1, 212.0], [74.2, 212.0], [74.3, 212.0], [74.4, 213.0], [74.5, 213.0], [74.6, 213.0], [74.7, 213.0], [74.8, 213.0], [74.9, 213.0], [75.0, 213.0], [75.1, 213.0], [75.2, 213.0], [75.3, 213.0], [75.4, 213.0], [75.5, 213.0], [75.6, 214.0], [75.7, 214.0], [75.8, 215.0], [75.9, 215.0], [76.0, 215.0], [76.1, 215.0], [76.2, 215.0], [76.3, 215.0], [76.4, 215.0], [76.5, 215.0], [76.6, 215.0], [76.7, 215.0], [76.8, 216.0], [76.9, 216.0], [77.0, 216.0], [77.1, 216.0], [77.2, 216.0], [77.3, 216.0], [77.4, 216.0], [77.5, 216.0], [77.6, 216.0], [77.7, 216.0], [77.8, 216.0], [77.9, 216.0], [78.0, 216.0], [78.1, 216.0], [78.2, 216.0], [78.3, 216.0], [78.4, 217.0], [78.5, 217.0], [78.6, 217.0], [78.7, 217.0], [78.8, 218.0], [78.9, 218.0], [79.0, 218.0], [79.1, 218.0], [79.2, 218.0], [79.3, 218.0], [79.4, 218.0], [79.5, 218.0], [79.6, 218.0], [79.7, 218.0], [79.8, 219.0], [79.9, 219.0], [80.0, 219.0], [80.1, 219.0], [80.2, 220.0], [80.3, 220.0], [80.4, 220.0], [80.5, 220.0], [80.6, 220.0], [80.7, 220.0], [80.8, 220.0], [80.9, 220.0], [81.0, 220.0], [81.1, 220.0], [81.2, 220.0], [81.3, 220.0], [81.4, 220.0], [81.5, 220.0], [81.6, 220.0], [81.7, 221.0], [81.8, 221.0], [81.9, 221.0], [82.0, 221.0], [82.1, 222.0], [82.2, 222.0], [82.3, 222.0], [82.4, 222.0], [82.5, 222.0], [82.6, 222.0], [82.7, 222.0], [82.8, 222.0], [82.9, 222.0], [83.0, 222.0], [83.1, 223.0], [83.2, 223.0], [83.3, 223.0], [83.4, 223.0], [83.5, 223.0], [83.6, 223.0], [83.7, 223.0], [83.8, 223.0], [83.9, 223.0], [84.0, 223.0], [84.1, 224.0], [84.2, 224.0], [84.3, 225.0], [84.4, 225.0], [84.5, 225.0], [84.6, 225.0], [84.7, 225.0], [84.8, 225.0], [84.9, 225.0], [85.0, 225.0], [85.1, 225.0], [85.2, 225.0], [85.3, 225.0], [85.4, 225.0], [85.5, 225.0], [85.6, 225.0], [85.7, 226.0], [85.8, 226.0], [85.9, 226.0], [86.0, 226.0], [86.1, 227.0], [86.2, 227.0], [86.3, 227.0], [86.4, 227.0], [86.5, 228.0], [86.6, 228.0], [86.7, 228.0], [86.8, 228.0], [86.9, 228.0], [87.0, 228.0], [87.1, 228.0], [87.2, 228.0], [87.3, 229.0], [87.4, 229.0], [87.5, 229.0], [87.6, 229.0], [87.7, 229.0], [87.8, 229.0], [87.9, 230.0], [88.0, 230.0], [88.1, 230.0], [88.2, 230.0], [88.3, 230.0], [88.4, 230.0], [88.5, 231.0], [88.6, 231.0], [88.7, 231.0], [88.8, 231.0], [88.9, 231.0], [89.0, 231.0], [89.1, 231.0], [89.2, 231.0], [89.3, 231.0], [89.4, 231.0], [89.5, 232.0], [89.6, 232.0], [89.7, 232.0], [89.8, 232.0], [89.9, 233.0], [90.0, 233.0], [90.1, 233.0], [90.2, 233.0], [90.3, 233.0], [90.4, 233.0], [90.5, 234.0], [90.6, 234.0], [90.7, 234.0], [90.8, 234.0], [90.9, 234.0], [91.0, 234.0], [91.1, 235.0], [91.2, 235.0], [91.3, 235.0], [91.4, 235.0], [91.5, 237.0], [91.6, 237.0], [91.7, 237.0], [91.8, 237.0], [91.9, 238.0], [92.0, 238.0], [92.1, 238.0], [92.2, 238.0], [92.3, 238.0], [92.4, 238.0], [92.5, 238.0], [92.6, 238.0], [92.7, 239.0], [92.8, 239.0], [92.9, 242.0], [93.0, 242.0], [93.1, 245.0], [93.2, 245.0], [93.3, 246.0], [93.4, 246.0], [93.5, 247.0], [93.6, 247.0], [93.7, 248.0], [93.8, 248.0], [93.9, 248.0], [94.0, 248.0], [94.1, 249.0], [94.2, 249.0], [94.3, 250.0], [94.4, 250.0], [94.5, 250.0], [94.6, 250.0], [94.7, 251.0], [94.8, 251.0], [94.9, 252.0], [95.0, 252.0], [95.1, 253.0], [95.2, 253.0], [95.3, 258.0], [95.4, 258.0], [95.5, 261.0], [95.6, 261.0], [95.7, 264.0], [95.8, 264.0], [95.9, 293.0], [96.0, 293.0], [96.1, 313.0], [96.2, 313.0], [96.3, 329.0], [96.4, 329.0], [96.5, 341.0], [96.6, 341.0], [96.7, 422.0], [96.8, 422.0], [96.9, 435.0], [97.0, 435.0], [97.1, 442.0], [97.2, 442.0], [97.3, 458.0], [97.4, 458.0], [97.5, 460.0], [97.6, 460.0], [97.7, 489.0], [97.8, 489.0], [97.9, 576.0], [98.0, 576.0], [98.1, 582.0], [98.2, 582.0], [98.3, 587.0], [98.4, 587.0], [98.5, 608.0], [98.6, 608.0], [98.7, 645.0], [98.8, 645.0], [98.9, 661.0], [99.0, 661.0], [99.1, 696.0], [99.2, 696.0], [99.3, 710.0], [99.4, 710.0], [99.5, 763.0], [99.6, 763.0], [99.7, 814.0], [99.8, 814.0], [99.9, 829.0], [100.0, 829.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 555.0], [0.1, 555.0], [0.2, 558.0], [0.3, 558.0], [0.4, 559.0], [0.5, 559.0], [0.6, 559.0], [0.7, 568.0], [0.8, 572.0], [0.9, 572.0], [1.0, 572.0], [1.1, 572.0], [1.2, 572.0], [1.3, 573.0], [1.4, 573.0], [1.5, 574.0], [1.6, 574.0], [1.7, 574.0], [1.8, 574.0], [1.9, 574.0], [2.0, 576.0], [2.1, 576.0], [2.2, 578.0], [2.3, 578.0], [2.4, 578.0], [2.5, 579.0], [2.6, 579.0], [2.7, 580.0], [2.8, 580.0], [2.9, 581.0], [3.0, 581.0], [3.1, 582.0], [3.2, 582.0], [3.3, 583.0], [3.4, 583.0], [3.5, 585.0], [3.6, 585.0], [3.7, 585.0], [3.8, 585.0], [3.9, 587.0], [4.0, 587.0], [4.1, 587.0], [4.2, 587.0], [4.3, 587.0], [4.4, 587.0], [4.5, 587.0], [4.6, 587.0], [4.7, 588.0], [4.8, 588.0], [4.9, 590.0], [5.0, 590.0], [5.1, 591.0], [5.2, 591.0], [5.3, 592.0], [5.4, 592.0], [5.5, 593.0], [5.6, 593.0], [5.7, 593.0], [5.8, 593.0], [5.9, 594.0], [6.0, 594.0], [6.1, 595.0], [6.2, 595.0], [6.3, 597.0], [6.4, 597.0], [6.5, 597.0], [6.6, 597.0], [6.7, 598.0], [6.8, 598.0], [6.9, 598.0], [7.0, 598.0], [7.1, 598.0], [7.2, 598.0], [7.3, 599.0], [7.4, 599.0], [7.5, 600.0], [7.6, 600.0], [7.7, 600.0], [7.8, 600.0], [7.9, 601.0], [8.0, 601.0], [8.1, 601.0], [8.2, 601.0], [8.3, 601.0], [8.4, 601.0], [8.5, 602.0], [8.6, 602.0], [8.7, 602.0], [8.8, 602.0], [8.9, 603.0], [9.0, 603.0], [9.1, 605.0], [9.2, 605.0], [9.3, 605.0], [9.4, 605.0], [9.5, 605.0], [9.6, 605.0], [9.7, 606.0], [9.8, 606.0], [9.9, 607.0], [10.0, 607.0], [10.1, 607.0], [10.2, 607.0], [10.3, 607.0], [10.4, 607.0], [10.5, 609.0], [10.6, 609.0], [10.7, 610.0], [10.8, 611.0], [10.9, 611.0], [11.0, 611.0], [11.1, 611.0], [11.2, 611.0], [11.3, 611.0], [11.4, 611.0], [11.5, 611.0], [11.6, 611.0], [11.7, 612.0], [11.8, 612.0], [11.9, 612.0], [12.0, 612.0], [12.1, 612.0], [12.2, 612.0], [12.3, 613.0], [12.4, 613.0], [12.5, 613.0], [12.6, 613.0], [12.7, 614.0], [12.8, 614.0], [12.9, 614.0], [13.0, 614.0], [13.1, 614.0], [13.2, 614.0], [13.3, 615.0], [13.4, 615.0], [13.5, 615.0], [13.6, 615.0], [13.7, 615.0], [13.8, 616.0], [13.9, 616.0], [14.0, 616.0], [14.1, 616.0], [14.2, 616.0], [14.3, 617.0], [14.4, 617.0], [14.5, 617.0], [14.6, 617.0], [14.7, 617.0], [14.8, 618.0], [14.9, 618.0], [15.0, 618.0], [15.1, 618.0], [15.2, 618.0], [15.3, 618.0], [15.4, 619.0], [15.5, 619.0], [15.6, 620.0], [15.7, 620.0], [15.8, 620.0], [15.9, 620.0], [16.0, 621.0], [16.1, 621.0], [16.2, 622.0], [16.3, 622.0], [16.4, 622.0], [16.5, 622.0], [16.6, 622.0], [16.7, 622.0], [16.8, 622.0], [16.9, 622.0], [17.0, 622.0], [17.1, 622.0], [17.2, 622.0], [17.3, 622.0], [17.4, 623.0], [17.5, 623.0], [17.6, 623.0], [17.7, 623.0], [17.8, 624.0], [17.9, 624.0], [18.0, 624.0], [18.1, 624.0], [18.2, 624.0], [18.3, 624.0], [18.4, 625.0], [18.5, 625.0], [18.6, 625.0], [18.7, 625.0], [18.8, 625.0], [18.9, 625.0], [19.0, 625.0], [19.1, 625.0], [19.2, 626.0], [19.3, 626.0], [19.4, 627.0], [19.5, 627.0], [19.6, 627.0], [19.7, 627.0], [19.8, 627.0], [19.9, 627.0], [20.0, 628.0], [20.1, 628.0], [20.2, 628.0], [20.3, 628.0], [20.4, 628.0], [20.5, 628.0], [20.6, 629.0], [20.7, 629.0], [20.8, 629.0], [20.9, 629.0], [21.0, 629.0], [21.1, 629.0], [21.2, 629.0], [21.3, 629.0], [21.4, 629.0], [21.5, 630.0], [21.6, 630.0], [21.7, 630.0], [21.8, 632.0], [21.9, 632.0], [22.0, 632.0], [22.1, 632.0], [22.2, 632.0], [22.3, 632.0], [22.4, 632.0], [22.5, 632.0], [22.6, 632.0], [22.7, 632.0], [22.8, 633.0], [22.9, 633.0], [23.0, 633.0], [23.1, 633.0], [23.2, 633.0], [23.3, 633.0], [23.4, 633.0], [23.5, 633.0], [23.6, 634.0], [23.7, 634.0], [23.8, 634.0], [23.9, 634.0], [24.0, 634.0], [24.1, 634.0], [24.2, 634.0], [24.3, 634.0], [24.4, 634.0], [24.5, 634.0], [24.6, 634.0], [24.7, 634.0], [24.8, 634.0], [24.9, 634.0], [25.0, 634.0], [25.1, 634.0], [25.2, 634.0], [25.3, 635.0], [25.4, 635.0], [25.5, 635.0], [25.6, 635.0], [25.7, 635.0], [25.8, 635.0], [25.9, 635.0], [26.0, 635.0], [26.1, 636.0], [26.2, 636.0], [26.3, 636.0], [26.4, 636.0], [26.5, 636.0], [26.6, 636.0], [26.7, 636.0], [26.8, 636.0], [26.9, 637.0], [27.0, 637.0], [27.1, 637.0], [27.2, 637.0], [27.3, 638.0], [27.4, 638.0], [27.5, 638.0], [27.6, 638.0], [27.7, 638.0], [27.8, 638.0], [27.9, 639.0], [28.0, 639.0], [28.1, 639.0], [28.2, 639.0], [28.3, 639.0], [28.4, 639.0], [28.5, 640.0], [28.6, 640.0], [28.7, 641.0], [28.8, 641.0], [28.9, 641.0], [29.0, 641.0], [29.1, 642.0], [29.2, 642.0], [29.3, 643.0], [29.4, 643.0], [29.5, 643.0], [29.6, 643.0], [29.7, 643.0], [29.8, 643.0], [29.9, 643.0], [30.0, 643.0], [30.1, 644.0], [30.2, 644.0], [30.3, 644.0], [30.4, 644.0], [30.5, 644.0], [30.6, 644.0], [30.7, 645.0], [30.8, 645.0], [30.9, 645.0], [31.0, 645.0], [31.1, 646.0], [31.2, 646.0], [31.3, 646.0], [31.4, 646.0], [31.5, 646.0], [31.6, 646.0], [31.7, 646.0], [31.8, 646.0], [31.9, 646.0], [32.0, 647.0], [32.1, 647.0], [32.2, 647.0], [32.3, 647.0], [32.4, 648.0], [32.5, 648.0], [32.6, 648.0], [32.7, 648.0], [32.8, 648.0], [32.9, 648.0], [33.0, 649.0], [33.1, 649.0], [33.2, 649.0], [33.3, 649.0], [33.4, 649.0], [33.5, 649.0], [33.6, 650.0], [33.7, 650.0], [33.8, 650.0], [33.9, 650.0], [34.0, 651.0], [34.1, 651.0], [34.2, 651.0], [34.3, 651.0], [34.4, 651.0], [34.5, 651.0], [34.6, 652.0], [34.7, 652.0], [34.8, 652.0], [34.9, 652.0], [35.0, 652.0], [35.1, 652.0], [35.2, 653.0], [35.3, 653.0], [35.4, 653.0], [35.5, 653.0], [35.6, 654.0], [35.7, 654.0], [35.8, 654.0], [35.9, 654.0], [36.0, 654.0], [36.1, 654.0], [36.2, 655.0], [36.3, 655.0], [36.4, 655.0], [36.5, 655.0], [36.6, 655.0], [36.7, 655.0], [36.8, 655.0], [36.9, 655.0], [37.0, 655.0], [37.1, 655.0], [37.2, 656.0], [37.3, 656.0], [37.4, 656.0], [37.5, 656.0], [37.6, 656.0], [37.7, 656.0], [37.8, 656.0], [37.9, 656.0], [38.0, 656.0], [38.1, 656.0], [38.2, 657.0], [38.3, 657.0], [38.4, 657.0], [38.5, 658.0], [38.6, 658.0], [38.7, 658.0], [38.8, 658.0], [38.9, 658.0], [39.0, 658.0], [39.1, 658.0], [39.2, 658.0], [39.3, 658.0], [39.4, 658.0], [39.5, 659.0], [39.6, 659.0], [39.7, 659.0], [39.8, 659.0], [39.9, 659.0], [40.0, 659.0], [40.1, 659.0], [40.2, 661.0], [40.3, 661.0], [40.4, 661.0], [40.5, 661.0], [40.6, 661.0], [40.7, 661.0], [40.8, 661.0], [40.9, 661.0], [41.0, 661.0], [41.1, 661.0], [41.2, 661.0], [41.3, 661.0], [41.4, 661.0], [41.5, 662.0], [41.6, 662.0], [41.7, 662.0], [41.8, 662.0], [41.9, 662.0], [42.0, 662.0], [42.1, 662.0], [42.2, 663.0], [42.3, 663.0], [42.4, 663.0], [42.5, 664.0], [42.6, 664.0], [42.7, 664.0], [42.8, 664.0], [42.9, 664.0], [43.0, 664.0], [43.1, 664.0], [43.2, 664.0], [43.3, 664.0], [43.4, 664.0], [43.5, 665.0], [43.6, 665.0], [43.7, 666.0], [43.8, 666.0], [43.9, 666.0], [44.0, 666.0], [44.1, 666.0], [44.2, 666.0], [44.3, 667.0], [44.4, 667.0], [44.5, 668.0], [44.6, 668.0], [44.7, 668.0], [44.8, 668.0], [44.9, 669.0], [45.0, 669.0], [45.1, 669.0], [45.2, 669.0], [45.3, 669.0], [45.4, 669.0], [45.5, 670.0], [45.6, 670.0], [45.7, 670.0], [45.8, 670.0], [45.9, 670.0], [46.0, 670.0], [46.1, 670.0], [46.2, 670.0], [46.3, 670.0], [46.4, 670.0], [46.5, 671.0], [46.6, 671.0], [46.7, 671.0], [46.8, 671.0], [46.9, 672.0], [47.0, 672.0], [47.1, 672.0], [47.2, 672.0], [47.3, 672.0], [47.4, 672.0], [47.5, 672.0], [47.6, 672.0], [47.7, 672.0], [47.8, 672.0], [47.9, 673.0], [48.0, 673.0], [48.1, 673.0], [48.2, 673.0], [48.3, 673.0], [48.4, 673.0], [48.5, 673.0], [48.6, 673.0], [48.7, 674.0], [48.8, 674.0], [48.9, 674.0], [49.0, 674.0], [49.1, 674.0], [49.2, 674.0], [49.3, 674.0], [49.4, 674.0], [49.5, 675.0], [49.6, 675.0], [49.7, 675.0], [49.8, 675.0], [49.9, 675.0], [50.0, 675.0], [50.1, 675.0], [50.2, 675.0], [50.3, 675.0], [50.4, 675.0], [50.5, 676.0], [50.6, 676.0], [50.7, 676.0], [50.8, 676.0], [50.9, 677.0], [51.0, 677.0], [51.1, 677.0], [51.2, 677.0], [51.3, 677.0], [51.4, 677.0], [51.5, 677.0], [51.6, 678.0], [51.7, 678.0], [51.8, 678.0], [51.9, 679.0], [52.0, 679.0], [52.1, 679.0], [52.2, 680.0], [52.3, 680.0], [52.4, 680.0], [52.5, 680.0], [52.6, 680.0], [52.7, 680.0], [52.8, 680.0], [52.9, 681.0], [53.0, 681.0], [53.1, 681.0], [53.2, 681.0], [53.3, 681.0], [53.4, 681.0], [53.5, 682.0], [53.6, 682.0], [53.7, 682.0], [53.8, 682.0], [53.9, 682.0], [54.0, 682.0], [54.1, 682.0], [54.2, 683.0], [54.3, 683.0], [54.4, 683.0], [54.5, 683.0], [54.6, 683.0], [54.7, 683.0], [54.8, 683.0], [54.9, 683.0], [55.0, 683.0], [55.1, 683.0], [55.2, 684.0], [55.3, 684.0], [55.4, 684.0], [55.5, 684.0], [55.6, 685.0], [55.7, 685.0], [55.8, 685.0], [55.9, 685.0], [56.0, 685.0], [56.1, 685.0], [56.2, 685.0], [56.3, 685.0], [56.4, 685.0], [56.5, 685.0], [56.6, 686.0], [56.7, 686.0], [56.8, 686.0], [56.9, 686.0], [57.0, 687.0], [57.1, 687.0], [57.2, 687.0], [57.3, 687.0], [57.4, 687.0], [57.5, 687.0], [57.6, 687.0], [57.7, 687.0], [57.8, 687.0], [57.9, 687.0], [58.0, 688.0], [58.1, 688.0], [58.2, 688.0], [58.3, 688.0], [58.4, 688.0], [58.5, 688.0], [58.6, 688.0], [58.7, 688.0], [58.8, 688.0], [58.9, 688.0], [59.0, 688.0], [59.1, 688.0], [59.2, 689.0], [59.3, 689.0], [59.4, 689.0], [59.5, 690.0], [59.6, 690.0], [59.7, 690.0], [59.8, 690.0], [59.9, 691.0], [60.0, 691.0], [60.1, 691.0], [60.2, 691.0], [60.3, 691.0], [60.4, 691.0], [60.5, 691.0], [60.6, 691.0], [60.7, 691.0], [60.8, 691.0], [60.9, 691.0], [61.0, 691.0], [61.1, 692.0], [61.2, 692.0], [61.3, 692.0], [61.4, 692.0], [61.5, 693.0], [61.6, 693.0], [61.7, 694.0], [61.8, 694.0], [61.9, 694.0], [62.0, 694.0], [62.1, 694.0], [62.2, 694.0], [62.3, 695.0], [62.4, 695.0], [62.5, 695.0], [62.6, 695.0], [62.7, 695.0], [62.8, 695.0], [62.9, 695.0], [63.0, 695.0], [63.1, 696.0], [63.2, 696.0], [63.3, 697.0], [63.4, 697.0], [63.5, 697.0], [63.6, 697.0], [63.7, 698.0], [63.8, 698.0], [63.9, 699.0], [64.0, 699.0], [64.1, 699.0], [64.2, 699.0], [64.3, 699.0], [64.4, 699.0], [64.5, 699.0], [64.6, 699.0], [64.7, 699.0], [64.8, 699.0], [64.9, 700.0], [65.0, 700.0], [65.1, 701.0], [65.2, 701.0], [65.3, 701.0], [65.4, 701.0], [65.5, 701.0], [65.6, 701.0], [65.7, 702.0], [65.8, 702.0], [65.9, 702.0], [66.0, 702.0], [66.1, 703.0], [66.2, 703.0], [66.3, 703.0], [66.4, 703.0], [66.5, 704.0], [66.6, 704.0], [66.7, 704.0], [66.8, 704.0], [66.9, 705.0], [67.0, 705.0], [67.1, 705.0], [67.2, 705.0], [67.3, 705.0], [67.4, 705.0], [67.5, 705.0], [67.6, 705.0], [67.7, 705.0], [67.8, 705.0], [67.9, 705.0], [68.0, 705.0], [68.1, 705.0], [68.2, 705.0], [68.3, 706.0], [68.4, 706.0], [68.5, 706.0], [68.6, 706.0], [68.7, 706.0], [68.8, 706.0], [68.9, 706.0], [69.0, 706.0], [69.1, 707.0], [69.2, 707.0], [69.3, 707.0], [69.4, 707.0], [69.5, 707.0], [69.6, 707.0], [69.7, 708.0], [69.8, 708.0], [69.9, 709.0], [70.0, 709.0], [70.1, 709.0], [70.2, 709.0], [70.3, 709.0], [70.4, 709.0], [70.5, 709.0], [70.6, 709.0], [70.7, 710.0], [70.8, 710.0], [70.9, 710.0], [71.0, 710.0], [71.1, 710.0], [71.2, 710.0], [71.3, 711.0], [71.4, 711.0], [71.5, 711.0], [71.6, 711.0], [71.7, 711.0], [71.8, 711.0], [71.9, 712.0], [72.0, 712.0], [72.1, 712.0], [72.2, 712.0], [72.3, 712.0], [72.4, 712.0], [72.5, 712.0], [72.6, 712.0], [72.7, 713.0], [72.8, 713.0], [72.9, 714.0], [73.0, 714.0], [73.1, 714.0], [73.2, 714.0], [73.3, 714.0], [73.4, 715.0], [73.5, 715.0], [73.6, 715.0], [73.7, 715.0], [73.8, 715.0], [73.9, 715.0], [74.0, 715.0], [74.1, 715.0], [74.2, 715.0], [74.3, 715.0], [74.4, 715.0], [74.5, 715.0], [74.6, 715.0], [74.7, 715.0], [74.8, 715.0], [74.9, 716.0], [75.0, 716.0], [75.1, 716.0], [75.2, 716.0], [75.3, 717.0], [75.4, 717.0], [75.5, 717.0], [75.6, 717.0], [75.7, 718.0], [75.8, 718.0], [75.9, 718.0], [76.0, 718.0], [76.1, 718.0], [76.2, 718.0], [76.3, 719.0], [76.4, 719.0], [76.5, 719.0], [76.6, 719.0], [76.7, 720.0], [76.8, 720.0], [76.9, 721.0], [77.0, 721.0], [77.1, 721.0], [77.2, 721.0], [77.3, 721.0], [77.4, 721.0], [77.5, 722.0], [77.6, 722.0], [77.7, 722.0], [77.8, 722.0], [77.9, 722.0], [78.0, 722.0], [78.1, 723.0], [78.2, 723.0], [78.3, 724.0], [78.4, 724.0], [78.5, 724.0], [78.6, 724.0], [78.7, 725.0], [78.8, 725.0], [78.9, 725.0], [79.0, 725.0], [79.1, 726.0], [79.2, 726.0], [79.3, 726.0], [79.4, 726.0], [79.5, 727.0], [79.6, 727.0], [79.7, 727.0], [79.8, 727.0], [79.9, 727.0], [80.0, 727.0], [80.1, 728.0], [80.2, 728.0], [80.3, 730.0], [80.4, 730.0], [80.5, 731.0], [80.6, 731.0], [80.7, 731.0], [80.8, 731.0], [80.9, 731.0], [81.0, 731.0], [81.1, 732.0], [81.2, 732.0], [81.3, 732.0], [81.4, 732.0], [81.5, 732.0], [81.6, 732.0], [81.7, 732.0], [81.8, 732.0], [81.9, 732.0], [82.0, 732.0], [82.1, 733.0], [82.2, 733.0], [82.3, 733.0], [82.4, 733.0], [82.5, 734.0], [82.6, 734.0], [82.7, 736.0], [82.8, 736.0], [82.9, 736.0], [83.0, 736.0], [83.1, 737.0], [83.2, 737.0], [83.3, 738.0], [83.4, 738.0], [83.5, 738.0], [83.6, 738.0], [83.7, 740.0], [83.8, 740.0], [83.9, 740.0], [84.0, 740.0], [84.1, 742.0], [84.2, 742.0], [84.3, 742.0], [84.4, 742.0], [84.5, 744.0], [84.6, 744.0], [84.7, 744.0], [84.8, 744.0], [84.9, 745.0], [85.0, 745.0], [85.1, 746.0], [85.2, 746.0], [85.3, 747.0], [85.4, 747.0], [85.5, 747.0], [85.6, 747.0], [85.7, 747.0], [85.8, 747.0], [85.9, 748.0], [86.0, 748.0], [86.1, 748.0], [86.2, 748.0], [86.3, 748.0], [86.4, 748.0], [86.5, 749.0], [86.6, 749.0], [86.7, 749.0], [86.8, 749.0], [86.9, 751.0], [87.0, 751.0], [87.1, 751.0], [87.2, 751.0], [87.3, 752.0], [87.4, 752.0], [87.5, 752.0], [87.6, 752.0], [87.7, 752.0], [87.8, 752.0], [87.9, 753.0], [88.0, 753.0], [88.1, 753.0], [88.2, 753.0], [88.3, 753.0], [88.4, 753.0], [88.5, 756.0], [88.6, 756.0], [88.7, 756.0], [88.8, 756.0], [88.9, 756.0], [89.0, 756.0], [89.1, 756.0], [89.2, 756.0], [89.3, 757.0], [89.4, 757.0], [89.5, 757.0], [89.6, 757.0], [89.7, 758.0], [89.8, 758.0], [89.9, 759.0], [90.0, 759.0], [90.1, 760.0], [90.2, 760.0], [90.3, 760.0], [90.4, 760.0], [90.5, 764.0], [90.6, 764.0], [90.7, 767.0], [90.8, 767.0], [90.9, 772.0], [91.0, 772.0], [91.1, 772.0], [91.2, 772.0], [91.3, 774.0], [91.4, 774.0], [91.5, 774.0], [91.6, 774.0], [91.7, 775.0], [91.8, 775.0], [91.9, 776.0], [92.0, 776.0], [92.1, 776.0], [92.2, 776.0], [92.3, 781.0], [92.4, 781.0], [92.5, 785.0], [92.6, 785.0], [92.7, 789.0], [92.8, 789.0], [92.9, 796.0], [93.0, 796.0], [93.1, 798.0], [93.2, 798.0], [93.3, 798.0], [93.4, 798.0], [93.5, 805.0], [93.6, 805.0], [93.7, 806.0], [93.8, 806.0], [93.9, 810.0], [94.0, 810.0], [94.1, 820.0], [94.2, 820.0], [94.3, 833.0], [94.4, 833.0], [94.5, 851.0], [94.6, 851.0], [94.7, 899.0], [94.8, 899.0], [94.9, 906.0], [95.0, 906.0], [95.1, 912.0], [95.2, 912.0], [95.3, 920.0], [95.4, 920.0], [95.5, 974.0], [95.6, 974.0], [95.7, 1010.0], [95.8, 1010.0], [95.9, 1027.0], [96.0, 1027.0], [96.1, 1040.0], [96.2, 1040.0], [96.3, 1129.0], [96.4, 1129.0], [96.5, 1143.0], [96.6, 1143.0], [96.7, 1149.0], [96.8, 1149.0], [96.9, 1249.0], [97.0, 1249.0], [97.1, 1269.0], [97.2, 1269.0], [97.3, 1292.0], [97.4, 1292.0], [97.5, 1380.0], [97.6, 1380.0], [97.7, 1407.0], [97.8, 1407.0], [97.9, 1435.0], [98.0, 1435.0], [98.1, 1505.0], [98.2, 1505.0], [98.3, 1557.0], [98.4, 1557.0], [98.5, 1607.0], [98.6, 1607.0], [98.7, 1626.0], [98.8, 1626.0], [98.9, 1659.0], [99.0, 1659.0], [99.1, 1684.0], [99.2, 1684.0], [99.3, 1709.0], [99.4, 1709.0], [99.5, 1719.0], [99.6, 1719.0], [99.7, 1724.0], [99.8, 1724.0], [99.9, 1777.0], [100.0, 1777.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 500.0, "series": [{"data": [[2000.0, 500.0]], "isOverall": false, "label": "FTP Request", "isController": false}, {"data": [[1100.0, 4.0], [1200.0, 4.0], [600.0, 7.0], [300.0, 14.0], [700.0, 2.0], [800.0, 4.0], [400.0, 318.0], [900.0, 2.0], [1000.0, 2.0], [500.0, 143.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[300.0, 3.0], [600.0, 4.0], [700.0, 2.0], [100.0, 290.0], [200.0, 190.0], [400.0, 6.0], [800.0, 2.0], [500.0, 3.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[600.0, 287.0], [700.0, 143.0], [800.0, 7.0], [900.0, 4.0], [1000.0, 3.0], [1100.0, 3.0], [1200.0, 3.0], [1300.0, 1.0], [1400.0, 2.0], [1500.0, 2.0], [1600.0, 4.0], [1700.0, 4.0], [500.0, 37.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 10.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 822.0, "series": [{"data": [[0.0, 822.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 668.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 10.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 500.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 22.49517867271697, "minX": 1.61987274E12, "maxY": 24.248945147679326, "series": [{"data": [[1.61987274E12, 24.248945147679326], [1.6198728E12, 22.49517867271697]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6198728E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 182.0, "minX": 1.0, "maxY": 2049.666666666667, "series": [{"data": [[33.0, 2048.0], [32.0, 2049.666666666667], [2.0, 2021.0], [3.0, 2014.0], [4.0, 2010.0], [5.0, 2023.0], [7.0, 2019.0], [8.0, 2023.0], [9.0, 2021.0], [10.0, 2024.0], [11.0, 2013.0], [12.0, 2009.0], [13.0, 2011.0], [14.0, 2016.0], [15.0, 2025.0], [16.0, 2022.0], [1.0, 2019.0], [17.0, 2029.0], [18.0, 2038.0], [19.0, 2010.0], [20.0, 2006.0], [21.0, 2023.0], [22.0, 2023.6486486486485], [23.0, 2024.7347560975609], [24.0, 2027.2209302325582], [25.0, 2016.6666666666667], [26.0, 2037.0], [27.0, 2023.0], [28.0, 2033.0], [29.0, 2031.0], [31.0, 2027.0]], "isOverall": false, "label": "FTP Request", "isController": false}, {"data": [[22.98199999999997, 2025.568000000001]], "isOverall": false, "label": "FTP Request-Aggregated", "isController": false}, {"data": [[33.0, 527.0], [32.0, 485.5], [16.0, 999.0909090909089], [17.0, 439.5], [18.0, 439.0], [19.0, 508.3333333333333], [20.0, 455.5], [21.0, 487.55555555555554], [22.0, 487.8873239436617], [23.0, 485.2064220183487], [24.0, 468.23529411764713], [25.0, 471.75], [26.0, 426.0], [27.0, 467.8], [28.0, 478.6666666666667], [29.0, 472.0], [30.0, 484.6666666666667], [31.0, 472.6666666666667]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[22.61000000000001, 496.3780000000002]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[33.0, 223.0], [32.0, 185.0], [16.0, 252.36363636363637], [17.0, 182.0], [18.0, 216.0], [19.0, 222.0], [20.0, 197.5], [21.0, 186.0], [22.0, 204.80281690140853], [23.0, 213.20183486238534], [24.0, 255.64705882352942], [25.0, 200.0], [26.0, 191.0], [27.0, 210.4], [28.0, 244.0], [29.0, 218.0], [30.0, 189.66666666666666], [31.0, 204.33333333333334]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[22.61000000000001, 211.04799999999997]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[33.0, 751.0], [32.0, 672.0], [16.0, 1252.6363636363635], [17.0, 622.0], [18.0, 656.0], [19.0, 731.6666666666666], [20.0, 653.5], [21.0, 674.5555555555555], [22.0, 693.4600938967136], [23.0, 699.1513761467891], [24.0, 724.8235294117648], [25.0, 672.75], [26.0, 617.0], [27.0, 679.4], [28.0, 724.0], [29.0, 691.5], [30.0, 675.3333333333334], [31.0, 678.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[22.61000000000001, 708.2220000000002]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 33.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 550.4, "minX": 1.61987274E12, "maxY": 48130.4, "series": [{"data": [[1.61987274E12, 6980.533333333334], [1.6198728E12, 48130.4]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61987274E12, 550.4], [1.6198728E12, 3749.6]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6198728E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 195.85681293302548, "minX": 1.61987274E12, "maxY": 2037.2272727272732, "series": [{"data": [[1.61987274E12, 2037.2272727272732], [1.6198728E12, 2024.4429824561403]], "isOverall": false, "label": "FTP Request", "isController": false}, {"data": [[1.61987274E12, 641.4444444444445], [1.6198728E12, 475.4645308924484]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.61987274E12, 309.223880597015], [1.6198728E12, 195.85681293302548]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.61987274E12, 957.7936507936506], [1.6198728E12, 672.2425629290622]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6198728E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61987274E12, "maxY": 641.3809523809521, "series": [{"data": [[1.61987274E12, 0.0], [1.6198728E12, 0.0]], "isOverall": false, "label": "FTP Request", "isController": false}, {"data": [[1.61987274E12, 641.3809523809521], [1.6198728E12, 475.42562929061774]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.61987274E12, 309.11940298507466], [1.6198728E12, 195.81062355658193]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.61987274E12, 315.1587301587301], [1.6198728E12, 195.97711670480538]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6198728E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61987274E12, "maxY": 457.7777777777777, "series": [{"data": [[1.61987274E12, 0.0], [1.6198728E12, 0.0]], "isOverall": false, "label": "FTP Request", "isController": false}, {"data": [[1.61987274E12, 457.7777777777777], [1.6198728E12, 312.91304347826065]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.61987274E12, 171.4776119402985], [1.6198728E12, 95.75057736720555]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.61987274E12, 175.6349206349206], [1.6198728E12, 95.84439359267742]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6198728E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 148.0, "minX": 1.61987274E12, "maxY": 1777.0, "series": [{"data": [[1.61987274E12, 1777.0], [1.6198728E12, 899.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61987274E12, 1261.0], [1.6198728E12, 701.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61987274E12, 1727.18], [1.6198728E12, 774.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61987274E12, 1520.599999999999], [1.6198728E12, 727.5999999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61987274E12, 166.0], [1.6198728E12, 148.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61987274E12, 576.0], [1.6198728E12, 473.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6198728E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 206.0, "minX": 3.0, "maxY": 2036.0, "series": [{"data": [[32.0, 483.0], [33.0, 468.0], [35.0, 468.0], [34.0, 474.0], [9.0, 206.0], [37.0, 530.0], [36.0, 487.5], [38.0, 489.0], [53.0, 806.0], [14.0, 567.0], [21.0, 729.0], [26.0, 461.5], [27.0, 445.0], [31.0, 465.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[32.0, 2023.0], [33.0, 2022.0], [35.0, 2024.0], [34.0, 2028.0], [37.0, 2024.5], [36.0, 2019.0], [9.0, 2019.0], [38.0, 2032.0], [3.0, 2019.0], [53.0, 2025.0], [14.0, 2019.0], [21.0, 2034.0], [26.0, 2019.0], [31.0, 2036.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 53.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 3.0, "maxY": 653.0, "series": [{"data": [[32.0, 203.0], [33.0, 217.0], [35.0, 208.0], [34.0, 207.0], [9.0, 203.0], [37.0, 206.0], [36.0, 215.0], [38.0, 210.0], [53.0, 576.0], [14.0, 327.5], [21.0, 653.0], [26.0, 247.0], [27.0, 229.0], [31.0, 210.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[32.0, 0.0], [33.0, 0.0], [35.0, 0.0], [34.0, 0.0], [37.0, 0.0], [36.0, 0.0], [9.0, 0.0], [38.0, 0.0], [3.0, 0.0], [53.0, 0.0], [14.0, 0.0], [21.0, 0.0], [26.0, 0.0], [31.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 53.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 4.466666666666667, "minX": 1.61987274E12, "maxY": 28.866666666666667, "series": [{"data": [[1.61987274E12, 4.466666666666667], [1.6198728E12, 28.866666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6198728E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.7333333333333333, "minX": 1.61987274E12, "maxY": 14.566666666666666, "series": [{"data": [[1.61987274E12, 0.7333333333333333], [1.6198728E12, 7.6]], "isOverall": false, "label": "000", "isController": false}, {"data": [[1.61987274E12, 2.1], [1.6198728E12, 14.566666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61987274E12, 1.1166666666666667], [1.6198728E12, 7.216666666666667]], "isOverall": false, "label": "301", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6198728E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.7333333333333333, "minX": 1.61987274E12, "maxY": 7.6, "series": [{"data": [[1.61987274E12, 1.05], [1.6198728E12, 7.283333333333333]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.61987274E12, 1.1166666666666667], [1.6198728E12, 7.216666666666667]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.61987274E12, 1.05], [1.6198728E12, 7.283333333333333]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}, {"data": [[1.61987274E12, 0.7333333333333333], [1.6198728E12, 7.6]], "isOverall": false, "label": "FTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6198728E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.7333333333333333, "minX": 1.61987274E12, "maxY": 21.783333333333335, "series": [{"data": [[1.61987274E12, 3.216666666666667], [1.6198728E12, 21.783333333333335]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61987274E12, 0.7333333333333333], [1.6198728E12, 7.6]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6198728E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

